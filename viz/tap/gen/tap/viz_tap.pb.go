// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: viz_tap.proto

package tap

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	net "github.com/linkerd/linkerd2/controller/gen/common/net"
	viz "github.com/linkerd/linkerd2/viz/metrics-api/gen/viz"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TapEvent_ProxyDirection int32

const (
	TapEvent_UNKNOWN  TapEvent_ProxyDirection = 0
	TapEvent_INBOUND  TapEvent_ProxyDirection = 1
	TapEvent_OUTBOUND TapEvent_ProxyDirection = 2
)

// Enum value maps for TapEvent_ProxyDirection.
var (
	TapEvent_ProxyDirection_name = map[int32]string{
		0: "UNKNOWN",
		1: "INBOUND",
		2: "OUTBOUND",
	}
	TapEvent_ProxyDirection_value = map[string]int32{
		"UNKNOWN":  0,
		"INBOUND":  1,
		"OUTBOUND": 2,
	}
)

func (x TapEvent_ProxyDirection) Enum() *TapEvent_ProxyDirection {
	p := new(TapEvent_ProxyDirection)
	*p = x
	return p
}

func (x TapEvent_ProxyDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TapEvent_ProxyDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_viz_tap_proto_enumTypes[0].Descriptor()
}

func (TapEvent_ProxyDirection) Type() protoreflect.EnumType {
	return &file_viz_tap_proto_enumTypes[0]
}

func (x TapEvent_ProxyDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TapEvent_ProxyDirection.Descriptor instead.
func (TapEvent_ProxyDirection) EnumDescriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 0}
}

// Deprecated: Do not use.
type TapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//	*TapRequest_Pod
	//	*TapRequest_Deployment
	Target isTapRequest_Target `protobuf_oneof:"target"`
	// validation of these fields happens on the server
	MaxRps    float32 `protobuf:"fixed32,3,opt,name=maxRps,proto3" json:"maxRps,omitempty"`
	ToPort    uint32  `protobuf:"varint,4,opt,name=toPort,proto3" json:"toPort,omitempty"`
	ToIP      string  `protobuf:"bytes,5,opt,name=toIP,proto3" json:"toIP,omitempty"`
	FromPort  uint32  `protobuf:"varint,6,opt,name=fromPort,proto3" json:"fromPort,omitempty"`
	FromIP    string  `protobuf:"bytes,7,opt,name=fromIP,proto3" json:"fromIP,omitempty"`
	Scheme    string  `protobuf:"bytes,8,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Method    string  `protobuf:"bytes,9,opt,name=method,proto3" json:"method,omitempty"`
	Authority string  `protobuf:"bytes,10,opt,name=authority,proto3" json:"authority,omitempty"`
	Path      string  `protobuf:"bytes,11,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *TapRequest) Reset() {
	*x = TapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapRequest) ProtoMessage() {}

func (x *TapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapRequest.ProtoReflect.Descriptor instead.
func (*TapRequest) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{0}
}

func (m *TapRequest) GetTarget() isTapRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *TapRequest) GetPod() string {
	if x, ok := x.GetTarget().(*TapRequest_Pod); ok {
		return x.Pod
	}
	return ""
}

func (x *TapRequest) GetDeployment() string {
	if x, ok := x.GetTarget().(*TapRequest_Deployment); ok {
		return x.Deployment
	}
	return ""
}

func (x *TapRequest) GetMaxRps() float32 {
	if x != nil {
		return x.MaxRps
	}
	return 0
}

func (x *TapRequest) GetToPort() uint32 {
	if x != nil {
		return x.ToPort
	}
	return 0
}

func (x *TapRequest) GetToIP() string {
	if x != nil {
		return x.ToIP
	}
	return ""
}

func (x *TapRequest) GetFromPort() uint32 {
	if x != nil {
		return x.FromPort
	}
	return 0
}

func (x *TapRequest) GetFromIP() string {
	if x != nil {
		return x.FromIP
	}
	return ""
}

func (x *TapRequest) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *TapRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *TapRequest) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *TapRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type isTapRequest_Target interface {
	isTapRequest_Target()
}

type TapRequest_Pod struct {
	Pod string `protobuf:"bytes,1,opt,name=pod,proto3,oneof"`
}

type TapRequest_Deployment struct {
	Deployment string `protobuf:"bytes,2,opt,name=deployment,proto3,oneof"`
}

func (*TapRequest_Pod) isTapRequest_Target() {}

func (*TapRequest_Deployment) isTapRequest_Target() {}

// A tap request over kubernetes resources.
//
// This is used only by the tap APIServer.
type TapByResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes the kubernetes pods that should be tapped.
	Target *viz.ResourceSelection `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// Selects over events to be reported.
	Match *TapByResourceRequest_Match `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
	// Limits the number of events to be inspected.
	MaxRps float32 `protobuf:"fixed32,3,opt,name=maxRps,proto3" json:"maxRps,omitempty"`
	// Conditionally extracts components from requests and responses to include
	// in tap events
	Extract *TapByResourceRequest_Extract `protobuf:"bytes,4,opt,name=extract,proto3" json:"extract,omitempty"`
}

func (x *TapByResourceRequest) Reset() {
	*x = TapByResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapByResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapByResourceRequest) ProtoMessage() {}

func (x *TapByResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapByResourceRequest.ProtoReflect.Descriptor instead.
func (*TapByResourceRequest) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{1}
}

func (x *TapByResourceRequest) GetTarget() *viz.ResourceSelection {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *TapByResourceRequest) GetMatch() *TapByResourceRequest_Match {
	if x != nil {
		return x.Match
	}
	return nil
}

func (x *TapByResourceRequest) GetMaxRps() float32 {
	if x != nil {
		return x.MaxRps
	}
	return 0
}

func (x *TapByResourceRequest) GetExtract() *TapByResourceRequest_Extract {
	if x != nil {
		return x.Extract
	}
	return nil
}

// This is used only by the tap APIServer.
type TapEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source          *net.TcpAddress         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	SourceMeta      *TapEvent_EndpointMeta  `protobuf:"bytes,5,opt,name=source_meta,json=sourceMeta,proto3" json:"source_meta,omitempty"`
	Destination     *net.TcpAddress         `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	DestinationMeta *TapEvent_EndpointMeta  `protobuf:"bytes,4,opt,name=destination_meta,json=destinationMeta,proto3" json:"destination_meta,omitempty"`
	RouteMeta       *TapEvent_RouteMeta     `protobuf:"bytes,7,opt,name=route_meta,json=routeMeta,proto3" json:"route_meta,omitempty"`
	ProxyDirection  TapEvent_ProxyDirection `protobuf:"varint,6,opt,name=proxy_direction,json=proxyDirection,proto3,enum=linkerd2.tap.TapEvent_ProxyDirection" json:"proxy_direction,omitempty"`
	// Types that are assignable to Event:
	//	*TapEvent_Http_
	Event isTapEvent_Event `protobuf_oneof:"event"`
}

func (x *TapEvent) Reset() {
	*x = TapEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent) ProtoMessage() {}

func (x *TapEvent) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent.ProtoReflect.Descriptor instead.
func (*TapEvent) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2}
}

func (x *TapEvent) GetSource() *net.TcpAddress {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *TapEvent) GetSourceMeta() *TapEvent_EndpointMeta {
	if x != nil {
		return x.SourceMeta
	}
	return nil
}

func (x *TapEvent) GetDestination() *net.TcpAddress {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *TapEvent) GetDestinationMeta() *TapEvent_EndpointMeta {
	if x != nil {
		return x.DestinationMeta
	}
	return nil
}

func (x *TapEvent) GetRouteMeta() *TapEvent_RouteMeta {
	if x != nil {
		return x.RouteMeta
	}
	return nil
}

func (x *TapEvent) GetProxyDirection() TapEvent_ProxyDirection {
	if x != nil {
		return x.ProxyDirection
	}
	return TapEvent_UNKNOWN
}

func (m *TapEvent) GetEvent() isTapEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TapEvent) GetHttp() *TapEvent_Http {
	if x, ok := x.GetEvent().(*TapEvent_Http_); ok {
		return x.Http
	}
	return nil
}

type isTapEvent_Event interface {
	isTapEvent_Event()
}

type TapEvent_Http_ struct {
	Http *TapEvent_Http `protobuf:"bytes,3,opt,name=http,proto3,oneof"`
}

func (*TapEvent_Http_) isTapEvent_Event() {}

type TapByResourceRequest_Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Match:
	//	*TapByResourceRequest_Match_All
	//	*TapByResourceRequest_Match_Any
	//	*TapByResourceRequest_Match_Not
	//	*TapByResourceRequest_Match_Destinations
	//	*TapByResourceRequest_Match_Http_
	Match isTapByResourceRequest_Match_Match `protobuf_oneof:"match"`
}

func (x *TapByResourceRequest_Match) Reset() {
	*x = TapByResourceRequest_Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapByResourceRequest_Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapByResourceRequest_Match) ProtoMessage() {}

func (x *TapByResourceRequest_Match) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapByResourceRequest_Match.ProtoReflect.Descriptor instead.
func (*TapByResourceRequest_Match) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{1, 0}
}

func (m *TapByResourceRequest_Match) GetMatch() isTapByResourceRequest_Match_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (x *TapByResourceRequest_Match) GetAll() *TapByResourceRequest_Match_Seq {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_All); ok {
		return x.All
	}
	return nil
}

func (x *TapByResourceRequest_Match) GetAny() *TapByResourceRequest_Match_Seq {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Any); ok {
		return x.Any
	}
	return nil
}

func (x *TapByResourceRequest_Match) GetNot() *TapByResourceRequest_Match {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Not); ok {
		return x.Not
	}
	return nil
}

func (x *TapByResourceRequest_Match) GetDestinations() *viz.ResourceSelection {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Destinations); ok {
		return x.Destinations
	}
	return nil
}

func (x *TapByResourceRequest_Match) GetHttp() *TapByResourceRequest_Match_Http {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Http_); ok {
		return x.Http
	}
	return nil
}

type isTapByResourceRequest_Match_Match interface {
	isTapByResourceRequest_Match_Match()
}

type TapByResourceRequest_Match_All struct {
	// If empty, matches all messages.
	All *TapByResourceRequest_Match_Seq `protobuf:"bytes,1,opt,name=all,proto3,oneof"`
}

type TapByResourceRequest_Match_Any struct {
	// If empty, matches no messages.
	Any *TapByResourceRequest_Match_Seq `protobuf:"bytes,2,opt,name=any,proto3,oneof"`
}

type TapByResourceRequest_Match_Not struct {
	// Inverts the inner match.
	Not *TapByResourceRequest_Match `protobuf:"bytes,3,opt,name=not,proto3,oneof"`
}

type TapByResourceRequest_Match_Destinations struct {
	// Matches events being sent to any of the selected destinations.
	Destinations *viz.ResourceSelection `protobuf:"bytes,4,opt,name=destinations,proto3,oneof"`
}

type TapByResourceRequest_Match_Http_ struct {
	// Matches HTTP requests by their metadata.
	Http *TapByResourceRequest_Match_Http `protobuf:"bytes,5,opt,name=http,proto3,oneof"`
}

func (*TapByResourceRequest_Match_All) isTapByResourceRequest_Match_Match() {}

func (*TapByResourceRequest_Match_Any) isTapByResourceRequest_Match_Match() {}

func (*TapByResourceRequest_Match_Not) isTapByResourceRequest_Match_Match() {}

func (*TapByResourceRequest_Match_Destinations) isTapByResourceRequest_Match_Match() {}

func (*TapByResourceRequest_Match_Http_) isTapByResourceRequest_Match_Match() {}

type TapByResourceRequest_Extract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Extract:
	//	*TapByResourceRequest_Extract_Http_
	Extract isTapByResourceRequest_Extract_Extract `protobuf_oneof:"extract"`
}

func (x *TapByResourceRequest_Extract) Reset() {
	*x = TapByResourceRequest_Extract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapByResourceRequest_Extract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapByResourceRequest_Extract) ProtoMessage() {}

func (x *TapByResourceRequest_Extract) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapByResourceRequest_Extract.ProtoReflect.Descriptor instead.
func (*TapByResourceRequest_Extract) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{1, 1}
}

func (m *TapByResourceRequest_Extract) GetExtract() isTapByResourceRequest_Extract_Extract {
	if m != nil {
		return m.Extract
	}
	return nil
}

func (x *TapByResourceRequest_Extract) GetHttp() *TapByResourceRequest_Extract_Http {
	if x, ok := x.GetExtract().(*TapByResourceRequest_Extract_Http_); ok {
		return x.Http
	}
	return nil
}

type isTapByResourceRequest_Extract_Extract interface {
	isTapByResourceRequest_Extract_Extract()
}

type TapByResourceRequest_Extract_Http_ struct {
	Http *TapByResourceRequest_Extract_Http `protobuf:"bytes,1,opt,name=http,proto3,oneof"`
}

func (*TapByResourceRequest_Extract_Http_) isTapByResourceRequest_Extract_Extract() {}

type TapByResourceRequest_Match_Seq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matches []*TapByResourceRequest_Match `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *TapByResourceRequest_Match_Seq) Reset() {
	*x = TapByResourceRequest_Match_Seq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapByResourceRequest_Match_Seq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapByResourceRequest_Match_Seq) ProtoMessage() {}

func (x *TapByResourceRequest_Match_Seq) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapByResourceRequest_Match_Seq.ProtoReflect.Descriptor instead.
func (*TapByResourceRequest_Match_Seq) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *TapByResourceRequest_Match_Seq) GetMatches() []*TapByResourceRequest_Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

type TapByResourceRequest_Match_Http struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Match:
	//	*TapByResourceRequest_Match_Http_Scheme
	//	*TapByResourceRequest_Match_Http_Method
	//	*TapByResourceRequest_Match_Http_Authority
	//	*TapByResourceRequest_Match_Http_Path
	Match isTapByResourceRequest_Match_Http_Match `protobuf_oneof:"match"`
}

func (x *TapByResourceRequest_Match_Http) Reset() {
	*x = TapByResourceRequest_Match_Http{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapByResourceRequest_Match_Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapByResourceRequest_Match_Http) ProtoMessage() {}

func (x *TapByResourceRequest_Match_Http) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapByResourceRequest_Match_Http.ProtoReflect.Descriptor instead.
func (*TapByResourceRequest_Match_Http) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (m *TapByResourceRequest_Match_Http) GetMatch() isTapByResourceRequest_Match_Http_Match {
	if m != nil {
		return m.Match
	}
	return nil
}

func (x *TapByResourceRequest_Match_Http) GetScheme() string {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Http_Scheme); ok {
		return x.Scheme
	}
	return ""
}

func (x *TapByResourceRequest_Match_Http) GetMethod() string {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Http_Method); ok {
		return x.Method
	}
	return ""
}

func (x *TapByResourceRequest_Match_Http) GetAuthority() string {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Http_Authority); ok {
		return x.Authority
	}
	return ""
}

func (x *TapByResourceRequest_Match_Http) GetPath() string {
	if x, ok := x.GetMatch().(*TapByResourceRequest_Match_Http_Path); ok {
		return x.Path
	}
	return ""
}

type isTapByResourceRequest_Match_Http_Match interface {
	isTapByResourceRequest_Match_Http_Match()
}

type TapByResourceRequest_Match_Http_Scheme struct {
	Scheme string `protobuf:"bytes,1,opt,name=scheme,proto3,oneof"`
}

type TapByResourceRequest_Match_Http_Method struct {
	Method string `protobuf:"bytes,2,opt,name=method,proto3,oneof"`
}

type TapByResourceRequest_Match_Http_Authority struct {
	Authority string `protobuf:"bytes,3,opt,name=authority,proto3,oneof"`
}

type TapByResourceRequest_Match_Http_Path struct {
	Path string `protobuf:"bytes,4,opt,name=path,proto3,oneof"`
}

func (*TapByResourceRequest_Match_Http_Scheme) isTapByResourceRequest_Match_Http_Match() {}

func (*TapByResourceRequest_Match_Http_Method) isTapByResourceRequest_Match_Http_Match() {}

func (*TapByResourceRequest_Match_Http_Authority) isTapByResourceRequest_Match_Http_Match() {}

func (*TapByResourceRequest_Match_Http_Path) isTapByResourceRequest_Match_Http_Match() {}

type TapByResourceRequest_Extract_Http struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Extract:
	//	*TapByResourceRequest_Extract_Http_Headers_
	Extract isTapByResourceRequest_Extract_Http_Extract `protobuf_oneof:"extract"`
}

func (x *TapByResourceRequest_Extract_Http) Reset() {
	*x = TapByResourceRequest_Extract_Http{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapByResourceRequest_Extract_Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapByResourceRequest_Extract_Http) ProtoMessage() {}

func (x *TapByResourceRequest_Extract_Http) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapByResourceRequest_Extract_Http.ProtoReflect.Descriptor instead.
func (*TapByResourceRequest_Extract_Http) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (m *TapByResourceRequest_Extract_Http) GetExtract() isTapByResourceRequest_Extract_Http_Extract {
	if m != nil {
		return m.Extract
	}
	return nil
}

func (x *TapByResourceRequest_Extract_Http) GetHeaders() *TapByResourceRequest_Extract_Http_Headers {
	if x, ok := x.GetExtract().(*TapByResourceRequest_Extract_Http_Headers_); ok {
		return x.Headers
	}
	return nil
}

type isTapByResourceRequest_Extract_Http_Extract interface {
	isTapByResourceRequest_Extract_Http_Extract()
}

type TapByResourceRequest_Extract_Http_Headers_ struct {
	Headers *TapByResourceRequest_Extract_Http_Headers `protobuf:"bytes,1,opt,name=headers,proto3,oneof"`
}

func (*TapByResourceRequest_Extract_Http_Headers_) isTapByResourceRequest_Extract_Http_Extract() {}

type TapByResourceRequest_Extract_Http_Headers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TapByResourceRequest_Extract_Http_Headers) Reset() {
	*x = TapByResourceRequest_Extract_Http_Headers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapByResourceRequest_Extract_Http_Headers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapByResourceRequest_Extract_Http_Headers) ProtoMessage() {}

func (x *TapByResourceRequest_Extract_Http_Headers) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapByResourceRequest_Extract_Http_Headers.ProtoReflect.Descriptor instead.
func (*TapByResourceRequest_Extract_Http_Headers) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{1, 1, 0, 0}
}

type TapEvent_EndpointMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TapEvent_EndpointMeta) Reset() {
	*x = TapEvent_EndpointMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent_EndpointMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent_EndpointMeta) ProtoMessage() {}

func (x *TapEvent_EndpointMeta) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent_EndpointMeta.ProtoReflect.Descriptor instead.
func (*TapEvent_EndpointMeta) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TapEvent_EndpointMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type TapEvent_RouteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TapEvent_RouteMeta) Reset() {
	*x = TapEvent_RouteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent_RouteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent_RouteMeta) ProtoMessage() {}

func (x *TapEvent_RouteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent_RouteMeta.ProtoReflect.Descriptor instead.
func (*TapEvent_RouteMeta) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 1}
}

func (x *TapEvent_RouteMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type TapEvent_Http struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*TapEvent_Http_RequestInit_
	//	*TapEvent_Http_ResponseInit_
	//	*TapEvent_Http_ResponseEnd_
	Event isTapEvent_Http_Event `protobuf_oneof:"event"`
}

func (x *TapEvent_Http) Reset() {
	*x = TapEvent_Http{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent_Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent_Http) ProtoMessage() {}

func (x *TapEvent_Http) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent_Http.ProtoReflect.Descriptor instead.
func (*TapEvent_Http) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 2}
}

func (m *TapEvent_Http) GetEvent() isTapEvent_Http_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TapEvent_Http) GetRequestInit() *TapEvent_Http_RequestInit {
	if x, ok := x.GetEvent().(*TapEvent_Http_RequestInit_); ok {
		return x.RequestInit
	}
	return nil
}

func (x *TapEvent_Http) GetResponseInit() *TapEvent_Http_ResponseInit {
	if x, ok := x.GetEvent().(*TapEvent_Http_ResponseInit_); ok {
		return x.ResponseInit
	}
	return nil
}

func (x *TapEvent_Http) GetResponseEnd() *TapEvent_Http_ResponseEnd {
	if x, ok := x.GetEvent().(*TapEvent_Http_ResponseEnd_); ok {
		return x.ResponseEnd
	}
	return nil
}

type isTapEvent_Http_Event interface {
	isTapEvent_Http_Event()
}

type TapEvent_Http_RequestInit_ struct {
	RequestInit *TapEvent_Http_RequestInit `protobuf:"bytes,1,opt,name=request_init,json=requestInit,proto3,oneof"`
}

type TapEvent_Http_ResponseInit_ struct {
	ResponseInit *TapEvent_Http_ResponseInit `protobuf:"bytes,2,opt,name=response_init,json=responseInit,proto3,oneof"`
}

type TapEvent_Http_ResponseEnd_ struct {
	ResponseEnd *TapEvent_Http_ResponseEnd `protobuf:"bytes,3,opt,name=response_end,json=responseEnd,proto3,oneof"`
}

func (*TapEvent_Http_RequestInit_) isTapEvent_Http_Event() {}

func (*TapEvent_Http_ResponseInit_) isTapEvent_Http_Event() {}

func (*TapEvent_Http_ResponseEnd_) isTapEvent_Http_Event() {}

type TapEvent_Http_StreamId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A randomized base (stable across a process's runtime)
	Base uint32 `protobuf:"varint,1,opt,name=base,proto3" json:"base,omitempty"`
	// A stream id unique within the lifetime of `base`.
	Stream uint64 `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *TapEvent_Http_StreamId) Reset() {
	*x = TapEvent_Http_StreamId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent_Http_StreamId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent_Http_StreamId) ProtoMessage() {}

func (x *TapEvent_Http_StreamId) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent_Http_StreamId.ProtoReflect.Descriptor instead.
func (*TapEvent_Http_StreamId) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 2, 0}
}

func (x *TapEvent_Http_StreamId) GetBase() uint32 {
	if x != nil {
		return x.Base
	}
	return 0
}

func (x *TapEvent_Http_StreamId) GetStream() uint64 {
	if x != nil {
		return x.Stream
	}
	return 0
}

type TapEvent_Http_RequestInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *TapEvent_Http_StreamId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Method    *viz.HttpMethod         `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Scheme    *viz.Scheme             `protobuf:"bytes,3,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Authority string                  `protobuf:"bytes,4,opt,name=authority,proto3" json:"authority,omitempty"`
	Path      string                  `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Headers   *viz.Headers            `protobuf:"bytes,6,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *TapEvent_Http_RequestInit) Reset() {
	*x = TapEvent_Http_RequestInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent_Http_RequestInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent_Http_RequestInit) ProtoMessage() {}

func (x *TapEvent_Http_RequestInit) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent_Http_RequestInit.ProtoReflect.Descriptor instead.
func (*TapEvent_Http_RequestInit) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 2, 1}
}

func (x *TapEvent_Http_RequestInit) GetId() *TapEvent_Http_StreamId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TapEvent_Http_RequestInit) GetMethod() *viz.HttpMethod {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *TapEvent_Http_RequestInit) GetScheme() *viz.Scheme {
	if x != nil {
		return x.Scheme
	}
	return nil
}

func (x *TapEvent_Http_RequestInit) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *TapEvent_Http_RequestInit) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TapEvent_Http_RequestInit) GetHeaders() *viz.Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TapEvent_Http_ResponseInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *TapEvent_Http_StreamId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SinceRequestInit *duration.Duration      `protobuf:"bytes,2,opt,name=since_request_init,json=sinceRequestInit,proto3" json:"since_request_init,omitempty"`
	HttpStatus       uint32                  `protobuf:"varint,3,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	Headers          *viz.Headers            `protobuf:"bytes,4,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *TapEvent_Http_ResponseInit) Reset() {
	*x = TapEvent_Http_ResponseInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent_Http_ResponseInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent_Http_ResponseInit) ProtoMessage() {}

func (x *TapEvent_Http_ResponseInit) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent_Http_ResponseInit.ProtoReflect.Descriptor instead.
func (*TapEvent_Http_ResponseInit) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 2, 2}
}

func (x *TapEvent_Http_ResponseInit) GetId() *TapEvent_Http_StreamId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TapEvent_Http_ResponseInit) GetSinceRequestInit() *duration.Duration {
	if x != nil {
		return x.SinceRequestInit
	}
	return nil
}

func (x *TapEvent_Http_ResponseInit) GetHttpStatus() uint32 {
	if x != nil {
		return x.HttpStatus
	}
	return 0
}

func (x *TapEvent_Http_ResponseInit) GetHeaders() *viz.Headers {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TapEvent_Http_ResponseEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                *TapEvent_Http_StreamId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SinceRequestInit  *duration.Duration      `protobuf:"bytes,2,opt,name=since_request_init,json=sinceRequestInit,proto3" json:"since_request_init,omitempty"`
	SinceResponseInit *duration.Duration      `protobuf:"bytes,3,opt,name=since_response_init,json=sinceResponseInit,proto3" json:"since_response_init,omitempty"`
	ResponseBytes     uint64                  `protobuf:"varint,4,opt,name=response_bytes,json=responseBytes,proto3" json:"response_bytes,omitempty"`
	Eos               *viz.Eos                `protobuf:"bytes,5,opt,name=eos,proto3" json:"eos,omitempty"`
	Trailers          *viz.Headers            `protobuf:"bytes,6,opt,name=trailers,proto3" json:"trailers,omitempty"`
}

func (x *TapEvent_Http_ResponseEnd) Reset() {
	*x = TapEvent_Http_ResponseEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_viz_tap_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TapEvent_Http_ResponseEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TapEvent_Http_ResponseEnd) ProtoMessage() {}

func (x *TapEvent_Http_ResponseEnd) ProtoReflect() protoreflect.Message {
	mi := &file_viz_tap_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TapEvent_Http_ResponseEnd.ProtoReflect.Descriptor instead.
func (*TapEvent_Http_ResponseEnd) Descriptor() ([]byte, []int) {
	return file_viz_tap_proto_rawDescGZIP(), []int{2, 2, 3}
}

func (x *TapEvent_Http_ResponseEnd) GetId() *TapEvent_Http_StreamId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TapEvent_Http_ResponseEnd) GetSinceRequestInit() *duration.Duration {
	if x != nil {
		return x.SinceRequestInit
	}
	return nil
}

func (x *TapEvent_Http_ResponseEnd) GetSinceResponseInit() *duration.Duration {
	if x != nil {
		return x.SinceResponseInit
	}
	return nil
}

func (x *TapEvent_Http_ResponseEnd) GetResponseBytes() uint64 {
	if x != nil {
		return x.ResponseBytes
	}
	return 0
}

func (x *TapEvent_Http_ResponseEnd) GetEos() *viz.Eos {
	if x != nil {
		return x.Eos
	}
	return nil
}

func (x *TapEvent_Http_ResponseEnd) GetTrailers() *viz.Headers {
	if x != nil {
		return x.Trailers
	}
	return nil
}

var File_viz_tap_proto protoreflect.FileDescriptor

var file_viz_tap_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x69, 0x7a, 0x5f, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x09, 0x76, 0x69, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x0a, 0x54,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x70, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x20, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x6d, 0x61, 0x78, 0x52, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x6f, 0x49, 0x50, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x50, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x3a, 0x02, 0x18, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xe5, 0x07, 0x0a, 0x14, 0x54, 0x61, 0x70, 0x42,
	0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78,
	0x52, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x52, 0x70,
	0x73, 0x12, 0x44, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x07,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x1a, 0xa4, 0x04, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x40, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61,
	0x70, 0x42, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x71, 0x48, 0x00, 0x52, 0x03,
	0x61, 0x6c, 0x6c, 0x12, 0x40, 0x0a, 0x03, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x03, 0x61, 0x6e, 0x79, 0x12, 0x3c, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x03,
	0x6e, 0x6f, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x72, 0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x1a,
	0x49, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72,
	0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x79, 0x0a, 0x04, 0x48, 0x74,
	0x74, 0x70, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x07, 0x0a, 0x05,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0xce,
	0x01, 0x0a, 0x07, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74, 0x74,
	0x70, 0x1a, 0x71, 0x0a, 0x04, 0x48, 0x74, 0x74, 0x70, 0x12, 0x53, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x42, 0x79, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x09,
	0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22,
	0xc2, 0x0f, 0x0a, 0x08, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6e,
	0x65, 0x74, 0x2e, 0x54, 0x63, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x54, 0x63, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e,
	0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0f, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3f,
	0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x4e, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x48, 0x00, 0x52, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x1a, 0x92, 0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74,
	0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x8c, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xf8, 0x08, 0x0a, 0x04, 0x48, 0x74, 0x74, 0x70, 0x12,
	0x4c, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x4f, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e,
	0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x4c,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e,
	0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x1a, 0x36, 0x0a, 0x08,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x1a, 0x86, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0xdf, 0x01,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x34,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73, 0x69, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a,
	0xd6, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x12,
	0x34, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69,
	0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x49,
	0x0a, 0x13, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x03, 0x65, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e, 0x45, 0x6f, 0x73,
	0x52, 0x03, 0x65, 0x6f, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72,
	0x64, 0x32, 0x2e, 0x76, 0x69, 0x7a, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x08,
	0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x38, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x32, 0x99, 0x01, 0x0a, 0x03, 0x54, 0x61, 0x70, 0x12, 0x3e, 0x0a, 0x03,
	0x54, 0x61, 0x70, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74,
	0x61, 0x70, 0x2e, 0x54, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x03, 0x88, 0x02, 0x01, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x0d,
	0x54, 0x61, 0x70, 0x42, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x2e,
	0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x54, 0x61, 0x70,
	0x42, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x54, 0x61, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x03, 0x88, 0x02, 0x01, 0x30, 0x01,
	0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x32, 0x2f,
	0x76, 0x69, 0x7a, 0x2f, 0x74, 0x61, 0x70, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x61, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_viz_tap_proto_rawDescOnce sync.Once
	file_viz_tap_proto_rawDescData = file_viz_tap_proto_rawDesc
)

func file_viz_tap_proto_rawDescGZIP() []byte {
	file_viz_tap_proto_rawDescOnce.Do(func() {
		file_viz_tap_proto_rawDescData = protoimpl.X.CompressGZIP(file_viz_tap_proto_rawDescData)
	})
	return file_viz_tap_proto_rawDescData
}

var file_viz_tap_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_viz_tap_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_viz_tap_proto_goTypes = []interface{}{
	(TapEvent_ProxyDirection)(0),                      // 0: linkerd2.tap.TapEvent.ProxyDirection
	(*TapRequest)(nil),                                // 1: linkerd2.tap.TapRequest
	(*TapByResourceRequest)(nil),                      // 2: linkerd2.tap.TapByResourceRequest
	(*TapEvent)(nil),                                  // 3: linkerd2.tap.TapEvent
	(*TapByResourceRequest_Match)(nil),                // 4: linkerd2.tap.TapByResourceRequest.Match
	(*TapByResourceRequest_Extract)(nil),              // 5: linkerd2.tap.TapByResourceRequest.Extract
	(*TapByResourceRequest_Match_Seq)(nil),            // 6: linkerd2.tap.TapByResourceRequest.Match.Seq
	(*TapByResourceRequest_Match_Http)(nil),           // 7: linkerd2.tap.TapByResourceRequest.Match.Http
	(*TapByResourceRequest_Extract_Http)(nil),         // 8: linkerd2.tap.TapByResourceRequest.Extract.Http
	(*TapByResourceRequest_Extract_Http_Headers)(nil), // 9: linkerd2.tap.TapByResourceRequest.Extract.Http.Headers
	(*TapEvent_EndpointMeta)(nil),                     // 10: linkerd2.tap.TapEvent.EndpointMeta
	(*TapEvent_RouteMeta)(nil),                        // 11: linkerd2.tap.TapEvent.RouteMeta
	(*TapEvent_Http)(nil),                             // 12: linkerd2.tap.TapEvent.Http
	nil,                                               // 13: linkerd2.tap.TapEvent.EndpointMeta.LabelsEntry
	nil,                                               // 14: linkerd2.tap.TapEvent.RouteMeta.LabelsEntry
	(*TapEvent_Http_StreamId)(nil),                    // 15: linkerd2.tap.TapEvent.Http.StreamId
	(*TapEvent_Http_RequestInit)(nil),                 // 16: linkerd2.tap.TapEvent.Http.RequestInit
	(*TapEvent_Http_ResponseInit)(nil),                // 17: linkerd2.tap.TapEvent.Http.ResponseInit
	(*TapEvent_Http_ResponseEnd)(nil),                 // 18: linkerd2.tap.TapEvent.Http.ResponseEnd
	(*viz.ResourceSelection)(nil),                     // 19: linkerd2.viz.ResourceSelection
	(*net.TcpAddress)(nil),                            // 20: linkerd2.common.net.TcpAddress
	(*viz.HttpMethod)(nil),                            // 21: linkerd2.viz.HttpMethod
	(*viz.Scheme)(nil),                                // 22: linkerd2.viz.Scheme
	(*viz.Headers)(nil),                               // 23: linkerd2.viz.Headers
	(*duration.Duration)(nil),                         // 24: google.protobuf.Duration
	(*viz.Eos)(nil),                                   // 25: linkerd2.viz.Eos
}
var file_viz_tap_proto_depIdxs = []int32{
	19, // 0: linkerd2.tap.TapByResourceRequest.target:type_name -> linkerd2.viz.ResourceSelection
	4,  // 1: linkerd2.tap.TapByResourceRequest.match:type_name -> linkerd2.tap.TapByResourceRequest.Match
	5,  // 2: linkerd2.tap.TapByResourceRequest.extract:type_name -> linkerd2.tap.TapByResourceRequest.Extract
	20, // 3: linkerd2.tap.TapEvent.source:type_name -> linkerd2.common.net.TcpAddress
	10, // 4: linkerd2.tap.TapEvent.source_meta:type_name -> linkerd2.tap.TapEvent.EndpointMeta
	20, // 5: linkerd2.tap.TapEvent.destination:type_name -> linkerd2.common.net.TcpAddress
	10, // 6: linkerd2.tap.TapEvent.destination_meta:type_name -> linkerd2.tap.TapEvent.EndpointMeta
	11, // 7: linkerd2.tap.TapEvent.route_meta:type_name -> linkerd2.tap.TapEvent.RouteMeta
	0,  // 8: linkerd2.tap.TapEvent.proxy_direction:type_name -> linkerd2.tap.TapEvent.ProxyDirection
	12, // 9: linkerd2.tap.TapEvent.http:type_name -> linkerd2.tap.TapEvent.Http
	6,  // 10: linkerd2.tap.TapByResourceRequest.Match.all:type_name -> linkerd2.tap.TapByResourceRequest.Match.Seq
	6,  // 11: linkerd2.tap.TapByResourceRequest.Match.any:type_name -> linkerd2.tap.TapByResourceRequest.Match.Seq
	4,  // 12: linkerd2.tap.TapByResourceRequest.Match.not:type_name -> linkerd2.tap.TapByResourceRequest.Match
	19, // 13: linkerd2.tap.TapByResourceRequest.Match.destinations:type_name -> linkerd2.viz.ResourceSelection
	7,  // 14: linkerd2.tap.TapByResourceRequest.Match.http:type_name -> linkerd2.tap.TapByResourceRequest.Match.Http
	8,  // 15: linkerd2.tap.TapByResourceRequest.Extract.http:type_name -> linkerd2.tap.TapByResourceRequest.Extract.Http
	4,  // 16: linkerd2.tap.TapByResourceRequest.Match.Seq.matches:type_name -> linkerd2.tap.TapByResourceRequest.Match
	9,  // 17: linkerd2.tap.TapByResourceRequest.Extract.Http.headers:type_name -> linkerd2.tap.TapByResourceRequest.Extract.Http.Headers
	13, // 18: linkerd2.tap.TapEvent.EndpointMeta.labels:type_name -> linkerd2.tap.TapEvent.EndpointMeta.LabelsEntry
	14, // 19: linkerd2.tap.TapEvent.RouteMeta.labels:type_name -> linkerd2.tap.TapEvent.RouteMeta.LabelsEntry
	16, // 20: linkerd2.tap.TapEvent.Http.request_init:type_name -> linkerd2.tap.TapEvent.Http.RequestInit
	17, // 21: linkerd2.tap.TapEvent.Http.response_init:type_name -> linkerd2.tap.TapEvent.Http.ResponseInit
	18, // 22: linkerd2.tap.TapEvent.Http.response_end:type_name -> linkerd2.tap.TapEvent.Http.ResponseEnd
	15, // 23: linkerd2.tap.TapEvent.Http.RequestInit.id:type_name -> linkerd2.tap.TapEvent.Http.StreamId
	21, // 24: linkerd2.tap.TapEvent.Http.RequestInit.method:type_name -> linkerd2.viz.HttpMethod
	22, // 25: linkerd2.tap.TapEvent.Http.RequestInit.scheme:type_name -> linkerd2.viz.Scheme
	23, // 26: linkerd2.tap.TapEvent.Http.RequestInit.headers:type_name -> linkerd2.viz.Headers
	15, // 27: linkerd2.tap.TapEvent.Http.ResponseInit.id:type_name -> linkerd2.tap.TapEvent.Http.StreamId
	24, // 28: linkerd2.tap.TapEvent.Http.ResponseInit.since_request_init:type_name -> google.protobuf.Duration
	23, // 29: linkerd2.tap.TapEvent.Http.ResponseInit.headers:type_name -> linkerd2.viz.Headers
	15, // 30: linkerd2.tap.TapEvent.Http.ResponseEnd.id:type_name -> linkerd2.tap.TapEvent.Http.StreamId
	24, // 31: linkerd2.tap.TapEvent.Http.ResponseEnd.since_request_init:type_name -> google.protobuf.Duration
	24, // 32: linkerd2.tap.TapEvent.Http.ResponseEnd.since_response_init:type_name -> google.protobuf.Duration
	25, // 33: linkerd2.tap.TapEvent.Http.ResponseEnd.eos:type_name -> linkerd2.viz.Eos
	23, // 34: linkerd2.tap.TapEvent.Http.ResponseEnd.trailers:type_name -> linkerd2.viz.Headers
	1,  // 35: linkerd2.tap.Tap.Tap:input_type -> linkerd2.tap.TapRequest
	2,  // 36: linkerd2.tap.Tap.TapByResource:input_type -> linkerd2.tap.TapByResourceRequest
	3,  // 37: linkerd2.tap.Tap.Tap:output_type -> linkerd2.tap.TapEvent
	3,  // 38: linkerd2.tap.Tap.TapByResource:output_type -> linkerd2.tap.TapEvent
	37, // [37:39] is the sub-list for method output_type
	35, // [35:37] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_viz_tap_proto_init() }
func file_viz_tap_proto_init() {
	if File_viz_tap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_viz_tap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapByResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapByResourceRequest_Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapByResourceRequest_Extract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapByResourceRequest_Match_Seq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapByResourceRequest_Match_Http); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapByResourceRequest_Extract_Http); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapByResourceRequest_Extract_Http_Headers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent_EndpointMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent_RouteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent_Http); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent_Http_StreamId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent_Http_RequestInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent_Http_ResponseInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_viz_tap_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TapEvent_Http_ResponseEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_viz_tap_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TapRequest_Pod)(nil),
		(*TapRequest_Deployment)(nil),
	}
	file_viz_tap_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TapEvent_Http_)(nil),
	}
	file_viz_tap_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*TapByResourceRequest_Match_All)(nil),
		(*TapByResourceRequest_Match_Any)(nil),
		(*TapByResourceRequest_Match_Not)(nil),
		(*TapByResourceRequest_Match_Destinations)(nil),
		(*TapByResourceRequest_Match_Http_)(nil),
	}
	file_viz_tap_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TapByResourceRequest_Extract_Http_)(nil),
	}
	file_viz_tap_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*TapByResourceRequest_Match_Http_Scheme)(nil),
		(*TapByResourceRequest_Match_Http_Method)(nil),
		(*TapByResourceRequest_Match_Http_Authority)(nil),
		(*TapByResourceRequest_Match_Http_Path)(nil),
	}
	file_viz_tap_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*TapByResourceRequest_Extract_Http_Headers_)(nil),
	}
	file_viz_tap_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*TapEvent_Http_RequestInit_)(nil),
		(*TapEvent_Http_ResponseInit_)(nil),
		(*TapEvent_Http_ResponseEnd_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_viz_tap_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_viz_tap_proto_goTypes,
		DependencyIndexes: file_viz_tap_proto_depIdxs,
		EnumInfos:         file_viz_tap_proto_enumTypes,
		MessageInfos:      file_viz_tap_proto_msgTypes,
	}.Build()
	File_viz_tap_proto = out.File
	file_viz_tap_proto_rawDesc = nil
	file_viz_tap_proto_goTypes = nil
	file_viz_tap_proto_depIdxs = nil
}
