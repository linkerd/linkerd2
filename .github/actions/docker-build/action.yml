name: Docker Build
description: Builds linkerd's docker images
inputs:
  docker-registry:
    description: The docker registry used to tag the images
    required: false
    default: cr.l5d.io/linkerd
  docker-target:
    description: The OS-arch the docker build will be targeted to
    required: false
    default: linux-amd64
  docker-push:
    description: Whether to push the built images to the registry
    required: false
    default: ''
  component:
    description: Image to build
    required: true
runs:
  using: composite
  steps:
  - name: Set environment variables from scripts
    shell: bash
    run: |
      echo "TAG=$(CI_FORCE_CLEAN=1 bin/root-tag)" >> $GITHUB_ENV
      echo "DOCKER_BUILDKIT_CACHE=${{ runner.temp }}/.buildx-cache" >> $GITHUB_ENV
  - name: Cache docker layers
    uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed
    with:
      path: ${{ env.DOCKER_BUILDKIT_CACHE }}
      key: ${{ runner.os }}-buildx-${{ inputs.component }}-${{ env.TAG }}
      restore-keys: ${{ runner.os }}-buildx-${{ inputs.component }}-
  - name: Set up QEMU
    uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480
  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25
  - if: inputs.docker-push
    uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ github.token }}
  - name: Build docker images
    env:
      DOCKER_REGISTRY: ${{ inputs.docker-registry }}
      DOCKER_TARGET: ${{ inputs.docker-target }}
      DOCKER_PUSH: ${{ inputs.docker-push }}
    shell: bash
    run: bin/docker-build-${{ inputs.component }}
  - name: Prune docker layers cache
    # changes generate new images while the existing ones don't get removed
    # so we manually do that to avoid bloating the cache
    shell: bash
    run: bin/docker-cache-prune
