name: Docker Build
description: Builds linkerd's docker images

inputs:
  docker-registry:
    description: The docker registry used to tag the images
    required: false
    default: cr.l5d.io/linkerd
  docker-target:
    description: The OS-arch the docker build will be targeted to
    required: false
    default: linux-amd64
  docker-push:
    description: Whether to push the built images to the registry
    required: false
    default: ''
  docker-ghcr-username:
    description: GH username under which to push images
    required: false
  docker-ghcr-pat:
    description: GH PAT for docker-ghcr-username
    required: false
  component:
    description: Component to build
    required: true
  tag:
    description: Tag to use for the built image
    required: true

runs:
  using: composite
  steps:
    # populate ACTIONS_CACHE_URL and ACTIONS_RUNTIME_TOKEN
    - uses: crazy-max/ghaction-github-runtime@b3a9207c0e1ef41f4cf215303c976869d0c2c1c4
    - uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
    - uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
    - name: Run bin/docker-build-${{ inputs.component }}
      env:
        DOCKER_REGISTRY: ${{ inputs.docker-registry }}
        DOCKER_TARGET: ${{ inputs.docker-target }}
        DOCKER_PUSH: ${{ inputs.docker-push }}
        TAG: ${{ inputs.tag }}
      shell: bash
      run: |
        if [[ -n "$DOCKER_PUSH" ]];then
          echo "${{ inputs.docker-ghcr-pat }}" | docker login ghcr.io -u "${{ inputs.docker-ghcr-username }}" --password-stdin
        fi
        bin/docker-build-${{ inputs.component }}

    - name: Output Image Digest
      shell: bash
      id: image_digest
      run: |
        image_digest=$(cat target/metadata-${{ inputs.component }}.json | jq -r '."containerimage.digest"')
        echo "${image_digest}"
        echo "DIGEST=${{ inputs.docker-registry }}/${{ inputs.component }}@${image_digest}" >> "$GITHUB_OUTPUT"

outputs:
  image:
    description: The image that was built
    value: ${{ inputs.docker-registry }}/${{ inputs.component }}:${{ inputs.tag }}
  digest:
    description: The image digest
    value: ${{ steps.image_digest.outputs.DIGEST }}
