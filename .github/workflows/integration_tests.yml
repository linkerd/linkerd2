name: Integration tests

on: [pull_request]

permissions:
  contents: read

env:
  GH_ANNOTATION: true
  DOCKER_REGISTRY: ghcr.io/linkerd

jobs:

  docker_build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        component:
        - cli-bin
        - cni-plugin
        - controller
        - debug
        - jaeger-webhook
        - metrics-api
        - policy-controller
        - proxy
        - tap
        - web
    name: Docker build (${{ matrix.component }})
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
    - uses: ./.github/actions/docker-build
      with:
        docker-registry: ${{ env.DOCKER_REGISTRY }}
        docker-target: linux-amd64
        component: ${{ matrix.component }}
    - name: Create artifact with CLI and image archives
      env:
        ARCHIVES: /home/runner/archives
      run: |
        mkdir -p $ARCHIVES
        docker save "$DOCKER_REGISTRY/${{ matrix.component }}:$TAG" > $ARCHIVES/${{ matrix.component }}.tar
    # `with.path` values do not support environment variables yet, so an
    # absolute path is used here.
    # https://github.com/actions/upload-artifact/issues/8
    - name: Upload artifact
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
      with:
        name: image-archives
        path: /home/runner/archives

  integration_tests:
    needs: [docker_build]
    strategy:
      matrix:
        integration_test:
        - cluster-domain
        - cni-calico-deep
        - deep
        - viz
        - default-policy-deny
        - external
        # Skipping Helm upgrade test given chart in 2.11 is backwards-incompatible
        #- helm-upgrade
        - multicluster
        - uninstall
        - upgrade-edge
        - upgrade-stable
    name: Integration tests (${{ matrix.integration_test }})

    # If a single test fails, allow other tests to run. This is mostly to
    # account for the fact that CI is flakey and failed workflows may need to be
    # rerun.
    continue-on-error: true
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
    - uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab
      with:
        go-version: '1.17'
    - name: Set environment variables from scripts
      run: |
        echo "TAG=$(CI_FORCE_CLEAN=1 bin/root-tag)" >> $GITHUB_ENV
    - name: Download image archives
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
      with:
        name: image-archives
        path: image-archives
    - name: Load cli-bin image into local docker images
      run: docker load < image-archives/cli-bin.tar
    - name: Install CLI
      run: |
        # Copy the CLI out of the local cli-bin container.
        container_id=$(docker create "$DOCKER_REGISTRY/cli-bin:$TAG")
        docker cp $container_id:/out/linkerd-linux-amd64 "$HOME/.linkerd"

        # Validate the CLI version matches the current build tag.
        [[ "$TAG" == "$($HOME/.linkerd version --short --client)" ]]
    - name: Run integration tests
      env:
        LINKERD_DOCKER_REGISTRY: ${{ env.DOCKER_REGISTRY }}
      run: |
        bin/tests --images archive --cleanup-docker --name ${{ matrix.integration_test }} "$HOME/.linkerd"
