name: Integration tests
on:
  pull_request: {}
  push:
    paths-ignore:
    - '*.md'
    - '**/*.md'
    - 'web/app/package.json'
    branches:
    - main
permissions:
  contents: read
env:
  GH_ANNOTATION: true
  DOCKER_REGISTRY: ghcr.io/linkerd
jobs:

  docker_build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        component: [proxy, controller, policy-controller, metrics-api, web, cni-plugin, debug, cli-bin, grafana, jaeger-webhook, tap]
    name: Docker build (${{ matrix.component }})
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
    - uses: ./.github/actions/docker-build
      with:
        docker-registry: ${{ env.DOCKER_REGISTRY }}
        docker-target: linux-amd64
        component: ${{ matrix.component }}
    - name: Create artifact with CLI and image archives
      env:
        ARCHIVES: /home/runner/archives
      run: |
        mkdir -p $ARCHIVES
        docker save "$DOCKER_REGISTRY/${{ matrix.component }}:$TAG" > $ARCHIVES/${{ matrix.component }}.tar
    # `with.path` values do not support environment variables yet, so an
    # absolute path is used here.
    # https://github.com/actions/upload-artifact/issues/8
    - name: Upload artifact
      uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074
      with:
        name: image-archives
        path: /home/runner/archives

  integration_tests:
    strategy:
      matrix:
        integration_test:
        - cluster-domain
        - deep
        - external-issuer
        - external-prometheus-deep
        - external-resources
        - helm-deep
        - helm-upgrade
        - multicluster
        - uninstall
        - upgrade-edge
        - upgrade-stable
        - cni-calico-deep
        - default-policy-deny
    needs: [docker_build]
    name: Integration tests (${{ matrix.integration_test }})
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
    - name: Set environment variables from scripts
      run: |
        echo "TAG=$(CI_FORCE_CLEAN=1 bin/root-tag)" >> $GITHUB_ENV
    - name: Download image archives
      uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60
      with:
        name: image-archives
        path: image-archives
    - name: Load cli-bin image into local docker images
      run: docker load < image-archives/cli-bin.tar
    - name: Install CLI
      run: |
        # Copy the CLI out of the local cli-bin container.
        container_id=$(docker create "$DOCKER_REGISTRY/cli-bin:$TAG")
        docker cp $container_id:/out/linkerd-linux-amd64 "$HOME/.linkerd"

        # Validate the CLI version matches the current build tag.
        [[ "$TAG" == "$($HOME/.linkerd version --short --client)" ]]
    - name: Run integration tests
      env:
        LINKERD_DOCKER_REGISTRY: ${{ env.DOCKER_REGISTRY }}
      run: |
        bin/tests --images archive --cleanup-docker --name ${{ matrix.integration_test }} "$HOME/.linkerd"
