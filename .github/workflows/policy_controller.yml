name: Policy Controller

on:
  pull_request:
    paths:
      - .github/workflows/policy_controller.yml
      - Cargo.lock
      - Cargo.toml
      - charts/linkerd-control-plane/templates/destination-rbac.yaml
      - charts/linkerd-crds/templates/policy/**
      - deny.toml
      - policy-controller/**
      - policy-test/**
      - rust-toolchain

permissions:
  contents: read

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  PROTOC_NO_VENDOR: 1
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:

  debug-cluster-container:
    runs-on: ubuntu-20.04
    container: ghcr.io/linkerd/dev:v19-tools
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: just test-cluster-create

  debug-cluster-raw:
    runs-on: ubuntu-20.04
    steps:
      - run: sudo apt update && sudo apt install -y cmake iproute2 libssl-dev pkg-config
      - uses: extractions/setup-just@aa5d15c144db4585980a44ebfdd2cf337c4f14cb
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: bin/scurl -v "https://raw.githubusercontent.com/k3d-io/k3d/v5.4.4/install.sh" | bash
      - run: just test-cluster-create

  ## ######################################################################## ##

  docker-build:
    needs: [debug-cluster-container, debug-cluster-raw]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        component:
          - cli-bin
          - controller
          - policy-controller
          - proxy
    name: Docker build (${{ matrix.component }})
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: ./.github/actions/docker-build
        with:
          docker-registry: ghcr.io/linkerd
          docker-target: linux-amd64
          component: ${{ matrix.component }}
      # TAG is set by docker-build
      - run: echo "$TAG"
      - name: Create artifact with CLI and image archives
        run: |
          mkdir -p /home/runner/archives
          docker save "ghcr.io/linkerd/${{ matrix.component }}:$TAG" \
            >/home/runner/archives/${{ matrix.component }}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: image-archives
          path: /home/runner/archives

  integration-build:
    needs: [debug-cluster-container, debug-cluster-raw]
    name: Integration build
    runs-on: ubuntu-20.04
    container: ghcr.io/linkerd/dev:v19-tools
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: mkdir target
      - run: just rs-fetch
      - run: cargo metadata --format-version 1 >target/metadata.json
      - run: cargo nextest list --frozen --package=linkerd-policy-test --list-type=binaries-only --message-format=json >target/nextest.json
      - name: Create tarball
        run: |
          mkdir -p /home/runner/archives
          jq -r '.["rust-binaries"] | to_entries | .[].value | .["binary-path"]' target/nextest.json | sed -e "s,^$PWD/,," \
            | xargs tar -czvf /home/runner/archives/nextest.tar.gz target/nextest.json target/metadata.json
      - name: Upload artifact
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          name: image-archives
          path: /home/runner/archives

  integration:
    needs: [docker-build, integration-build]
    strategy:
      matrix:
        k8s:
          - v1.21
          - v1.24
    name: Policy controller integration (k8s ${{ matrix.k8s }})

    runs-on: ubuntu-20.04
    timeout-minutes: 20
    env:
      LINKERD_DOCKER_REGISTRY: ghcr.io/linkerd
    container: docker://ghcr.io/linkerd/dev:v19-ci
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: just test-cluster-k8s=${{ matrix.k8s }} test-cluster-create
      - run: kubectl version

      - name: Download image archives
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: image-archives
          path: image-archives
      - name: Load test binaries
        run: tar -xzvf image-archives/nextest.tar.gz
      - name: Load images
        run: |
          just docker-pull-deps
          wait # Wait for pulls to complete
          docker load <image-archives/controller.tar
          docker load <image-archives/policy-controller.tar
          docker load <image-archives/proxy.tar
          docker image ls | grep -F -e bitnami/kubectl -e curlimages/curl -e nginx -e ghcr.io/linkerd
          # Image loading is flakey in CI, so retry!
          until just policy-test-load-images ; do
            sleep 2
            echo retrying...
          done

      # Install the Linkerd CLI from a docker image
      - name: Install the Linkerd CLI
        run: |
          tag="$(CI_FORCE_CLEAN=1 bin/root-tag)"
          docker load <image-archives/cli-bin.tar
          container_id=$(docker create "ghcr.io/linkerd/cli-bin:$tag")
          docker cp "$container_id:/out/linkerd-linux-amd64" /usr/local/bin/linkerd
          docker rm "$container_id"
      - run: just test-cluster-install-linkerd

      # Run the tests. We disable parallelism to avoid spurious timeouts caused
      # by resource contention.
      - run: cargo nextest run --cargo-metadata=target/metadata.json --binaries-metadata=target/nextest.json --test-threads=1
        env:
          NEXTEST_EXPERIMENTAL_REUSE_BUILD: 1
