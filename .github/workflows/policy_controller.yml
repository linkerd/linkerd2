name: Policy Controller

on:
  pull_request:
    paths:
      - 'Cargo.lock'
      - 'Cargo.toml'
      - 'deny.toml'
      - 'rust-toolchain'
      - 'policy-controller/**'
      - '.github/workflows/policy_controller.yml'

permissions:
  contents: read

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10

jobs:
  fmt:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.56.0
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - run: rustup component add rustfmt
      - run: cargo fmt --all -- --check

  audit:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing Ci.
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
    - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
    - uses: EmbarkStudios/cargo-deny-action@f2d2f98857d524436b31aa639bac5edc10863b08
      with:
        command: check bans licenses sources

  clippy:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.56.0
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - run: rustup component add clippy
      - run: cargo clippy --workspace --all-targets

  check:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    container:
      image: docker://rust:1.56.0
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      # Check each crate independently to ensure its Cargo.toml is sufficient.
      - run: |
          for toml in $(find . -mindepth 2 -name Cargo.toml | sort -r)
          do
            d=$(dirname "$toml")
            echo "# $d"
            (cd $d ; cargo check --all-targets)
          done

  test:
    name: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: docker://rust:1.56.0
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - run: cargo test --workspace --no-run
      - run: cargo test --workspace
