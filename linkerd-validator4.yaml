---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRSi8yUXVMNXBtYmFVODBEN0RZVngxREFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV3TWpVeE56VTBNRGRhRncweU16RXdNalV4TnpVME1EZGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBejRBOE14SmpNM1ZLdkMwKzZPeitNQTBZSXJPVmp4Uy93UkIwWXlxengzL0w5VldBYVJaSAo4SElyM0VyUFkzNFFha21BZXE3MmdRaHY5ZEJDSldqaUtISTM0WlFxanpqRThLbzA2aklkb3ZBUjJLSi9rVElXClhiSCt5a1FNT2VhQ2pGZllIbkdkMHpCaUZmamhrSkFDNll4NU53OTdRYWxlY01mMGhhcVNRRTV3em5vL3ZVRGkKb05zMDVtelBYNWF3UnJZdlJyTXBJNFBidFpZTHVhSStoNzFZckVEc1BnV0RLNy9CbnRFVVdaVFk4UFRzTHlLNQpyTHc3RGt5NjZhaHJpcFpad3VESFBGMFhZTVcyQlU1NzVvZVNBODI0RU1ta2lSVThZeHk1RzJDRi9odFkwbmxwClk5WStkalFvRGZKT3ZaRVMvQkk0elVwSTE2Z1BXQlNkN1FJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUMwY1krODVuSzA4NnVMNFJNZ3FUY2ZFRU1XSHVGTkFjV2hURDNlaTVsbU8KTWE3NHhVVWY3ckxMVlpUcDdoSzl0WkF3UDJ1VkIrSDl3WXk5bi9aNkxBWjZBeWV2eFVqVzdpQVFzZmszeGdXdQpjQ1N4d0ZnaHZkL0NhY25DOVNYY2ZmdHMzTUFXQnlDSlhORlpJbTAxamZyMFZuWXFVSHpoODNqK21NOGovckkrCjd0OWRraHIvemJvK3dORzVsQmZuMm01aEw2S0hvL2lhV1VQWkg5ZXdBZTArMFhoWVExbGpUKzJ3NzFkK0pOM0QKakdlSHkyOHJ3aVRad2p0Mlo2aDdYaDlFZnFwLzhsOEtjc1lZNCtMQVZYcU1MNS9BVUtJWll0OGZOU2tvUGlFcApWbGlNVUF1NzhqSFdFSlRXZHhyellLa3FoVEhienVaTlZvTHE1SnVaNjNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBejRBOE14SmpNM1ZLdkMwKzZPeitNQTBZSXJPVmp4Uy93UkIwWXlxengzL0w5VldBCmFSWkg4SElyM0VyUFkzNFFha21BZXE3MmdRaHY5ZEJDSldqaUtISTM0WlFxanpqRThLbzA2aklkb3ZBUjJLSi8Ka1RJV1hiSCt5a1FNT2VhQ2pGZllIbkdkMHpCaUZmamhrSkFDNll4NU53OTdRYWxlY01mMGhhcVNRRTV3em5vLwp2VURpb05zMDVtelBYNWF3UnJZdlJyTXBJNFBidFpZTHVhSStoNzFZckVEc1BnV0RLNy9CbnRFVVdaVFk4UFRzCkx5SzVyTHc3RGt5NjZhaHJpcFpad3VESFBGMFhZTVcyQlU1NzVvZVNBODI0RU1ta2lSVThZeHk1RzJDRi9odFkKMG5scFk5WStkalFvRGZKT3ZaRVMvQkk0elVwSTE2Z1BXQlNkN1FJREFRQUJBb0lCQVFES0dYVUlyVFVQam9MKwo2dmFsK1FYT0dVTFRzYVBPV3dBMDgyalltV1BHd0ZNUG5YcFhZQXNyUnBndmxIR1B6dDRBRjV6YVlRVFlRamFCCjdaZ3ZSWXRZcDM2RDZFTFhnZ3hXOXdCWXhmMFZrTXRnKzB4U1I3MSsvbmxSMlpzcTNiZHpKNi9vWHZMQUdoUysKbjh4YWQ5bE9UYkpXRFc4WVVmVVkxYmYwWkdEVDNaQzUzVEU4UTdSRlhoa29tNy90MkFPTmY3NVpISHJBTnMvVQpabGpqTFp6c0dnREJYa1dZeU45SU1lUExUME9nZFl0cDZOdXBJdWw3cmQyTklGTEp0bW15bFYyRjJGNHpXYzRvCjdQMWltQ3crSHE4RXJYOUU1RjNVOHIxMmJmdk9ObTRZQk96Y09FQTIvbkN0L3BwWFpXMWdzaWgwR1JQd2F4MEUKbFRlVGpUeGxBb0dCQU5qdXJLRkYxY3UyaHhCcVk4dXpYVWdHUHRSc25TcHI1cmhlRHM5UWxTYUxMWUMxSmhCSAoxVFFHN0k0OVFlV1hKVC8rL1dGenhTdENOdkgxR2h3bFpObmVVNEF6TE5aR0RUeTJXVTVhNnFuZGxManMrMUEyCjJvYXc0MEpEaHI4bVZFUVQwQkt6ZS9JMDAzc1FJVFcvZUxNR0xCeVNDWm90V0x2SlI4QjZjcnhYQW9HQkFQVGUKdlovWEhIclRydlBEMldZQmk3Z1FoTGdDcm9yWU1JajhSMUp5U2g5WTNyUlZhLzlrR05qUXE0dEZ1c1lsL0hJbApHTTJ3VUdFSXJVaEFrZmpwblIrMlJHMzU5YjBqY0didDNuUHVmK0lacHl6MkQ3TWg3ZnVSbVRoVHM2RTMxZFlvCktFWWk4cmNtelhDVkVhaGpLWjg0blF2S0pDNGxVYzJ0RHV1bkZzMWJBb0dBWUdqQ1kvSXJjQnV3cndUNVVTQm4KeG9pd0I2dzF0Uks3T1Jqa01CSzZGcVVvRmRsc0R6UTlkcC9WSmVubmpXZTg4RkljdmVDN3NkdjltMDY0eWVWOAppcThhSVJHZFRhVllZTEVSdzViNFQ0SGdoTWNkY2FyUE42a0pkdnVYdVFBSjF5K08rNkMwNXhHL0l5UXAvajhZCkgwZ1E5cW1ZaHVLOFdzaTdrTGxhb0lVQ2dZRUFoOVA2T1d5NE5vV3ZXVFk5SkRFZFVJZVJKd1VOenFTbkg0VloKQnFtdzVmeUU1R0V4MitPcFNMTlBSSnowUXErVmZiZUlMNmhxbmJpVGJpMnJDdmlER0xFZytpUWFKTVZBdDBlaApDb3UwVWpYS25zMEszbUdtd2RIOHZOcnBIRGQ5blNKL1hKQk1ORDRJM1RkREtUV0FRL3JDV21UUmR1dHFtZjB4CjlwT2p1VnNDZ1lFQXhMOHMyR1hCUElMbHE1cDF6L29YTG5vRUV2dlBPK09LN25UTmhzWjF5NERXb0YrbWRTOXcKanNva2htaHFmZFExUE9uR3lFa0RHUm0wYjB5V3d2VmtRUkpYUnp0TmRsNFl4cVpFdUNFaG1FaE1aZi85UWE5cgo3L2ZMN243OUhEVW4yYmRGcDRKYk9iT0E2bXVJNWREbnF2U2hTaFRjMWIrQXppcmUvUys2U0Y0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRSi8yUXVMNXBtYmFVODBEN0RZVngxREFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakV3TWpVeE56VTBNRGRhRncweU16RXdNalV4TnpVME1EZGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBejRBOE14SmpNM1ZLdkMwKzZPeitNQTBZSXJPVmp4Uy93UkIwWXlxengzL0w5VldBYVJaSAo4SElyM0VyUFkzNFFha21BZXE3MmdRaHY5ZEJDSldqaUtISTM0WlFxanpqRThLbzA2aklkb3ZBUjJLSi9rVElXClhiSCt5a1FNT2VhQ2pGZllIbkdkMHpCaUZmamhrSkFDNll4NU53OTdRYWxlY01mMGhhcVNRRTV3em5vL3ZVRGkKb05zMDVtelBYNWF3UnJZdlJyTXBJNFBidFpZTHVhSStoNzFZckVEc1BnV0RLNy9CbnRFVVdaVFk4UFRzTHlLNQpyTHc3RGt5NjZhaHJpcFpad3VESFBGMFhZTVcyQlU1NzVvZVNBODI0RU1ta2lSVThZeHk1RzJDRi9odFkwbmxwClk5WStkalFvRGZKT3ZaRVMvQkk0elVwSTE2Z1BXQlNkN1FJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUMwY1krODVuSzA4NnVMNFJNZ3FUY2ZFRU1XSHVGTkFjV2hURDNlaTVsbU8KTWE3NHhVVWY3ckxMVlpUcDdoSzl0WkF3UDJ1VkIrSDl3WXk5bi9aNkxBWjZBeWV2eFVqVzdpQVFzZmszeGdXdQpjQ1N4d0ZnaHZkL0NhY25DOVNYY2ZmdHMzTUFXQnlDSlhORlpJbTAxamZyMFZuWXFVSHpoODNqK21NOGovckkrCjd0OWRraHIvemJvK3dORzVsQmZuMm01aEw2S0hvL2lhV1VQWkg5ZXdBZTArMFhoWVExbGpUKzJ3NzFkK0pOM0QKakdlSHkyOHJ3aVRad2p0Mlo2aDdYaDlFZnFwLzhsOEtjc1lZNCtMQVZYcU1MNS9BVUtJWll0OGZOU2tvUGlFcApWbGlNVUF1NzhqSFdFSlRXZHhyellLa3FoVEhienVaTlZvTHE1SnVaNjNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRT0JnNmVQRWlUai8rSXJtaE1DNC9pakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1ESTFNVGMxTkRBM1doY05Nak14TURJMU1UYzFOREEzV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzR0JTR3dnVjhKbHdlTjI2NmlaV3JBVzgrcWpJL2szaU5qdldEbU5YcgpZYkQ5UGVEeWYwTzV0aTJBajhJSkdmdi9IMWRwL1VQV0F6VnhFY1pwL0RFbXo1R1BDMk8rVGxqdEhHUkpXa0JoCkxENXIvTnVua0MySzVBaU45QitvaExnRnVTdEJEdGt2YlFhWmEySjU5MTZkMXhnVXBoOVlVanB6blBNLzQ2YVYKVW9EVGxGL1BmNTczUjAvWjJwdjRINXkxU2RndktWUjlqN2lPdkV4M1NOV1RKYjVibXUrUmlQTmF4MEhXejgvNAoyUm95MmhXVmR1MnBkUHlsTm91ODM5YWRHQnMxS0RmcS9EeDFkMFVXVGlDdlRxTm5WWDRxMW9Ha0tzd1hPSjZJCmxXdWFHT2NOOU5VWGw3VkdEVVBkRHlvZlBrakFGM2JXWXVqOXFCa1ZBUWd6QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDTlhIUGZnbEhwYTRKdXZLSmRGZDdsc1NkdWsKdGNyVitWeFI0Njh0dy9ESW54d1Q3SGgzMi9pNEk5UVBwY3BpaXFIeEdhZmkvTEpwMzN1WFc1UWJrcFF0OU0wVgo2bWVaSXhzWEExby9WenVraTE1TUUrdVZtc3AzY1pXSUsvY0Uwb1ZOeWlFeW9vMi9HdXJqbERmZkEvMlRpQUROCnNtN2tBUitFZG52QnhNeFlXTXk2d2ZlUm96czNzakl0cHppT3Zvc0QwYUJBWVFPbGpCa2g1RWNLYlRQM2ozVmQKOHFreVJJRlQrNEE0aE83L3FSZGErbkREWUY1UmYxbStTYUE0MzMyeWh6SytoT3c3UlFONHFHMG02S3pUOUYybwp0dythdHZhclJRcER6TEh5OGNQeWl4ZUlHa25jUEw5Z0JieUU3Vmt3R2hzYm54RC9hRnZZSDhTVEVjQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBckJnVWhzSUZmQ1pjSGpkdXVvbVZxd0Z2UHFveVA1TjRqWTcxZzVqVjYyR3cvVDNnCjhuOUR1Yll0Z0kvQ0NSbjcveDlYYWYxRDFnTTFjUkhHYWZ3eEpzK1Jqd3Rqdms1WTdSeGtTVnBBWVN3K2EvemIKcDVBdGl1UUlqZlFmcUlTNEJia3JRUTdaTDIwR21XdGllZmRlbmRjWUZLWWZXRkk2YzV6elArT21sVktBMDVSZgp6MytlOTBkUDJkcWIrQitjdFVuWUx5bFVmWSs0anJ4TWQwalZreVcrVzVydmtZanpXc2RCMXMvUCtOa2FNdG9WCmxYYnRxWFQ4cFRhTHZOL1duUmdiTlNnMzZ2dzhkWGRGRms0Z3IwNmpaMVYrS3RhQnBDck1GemllaUpWcm1oam4KRGZUVkY1ZTFSZzFEM1E4cUh6NUl3QmQyMW1Mby9hZ1pGUUVJTXdJREFRQUJBb0lCQUZkTkIreXN0RmVjcGhKMgpFR2YwcjhaR1BnYk9GQnVJVmhtSnNpYUYrODhpaWNTT0JYVSs5ajVabW8ralhjMThMd2ZuQUZNMk5abDFtMEMyCndhNjJUc0RmZjNuUFQxUVZMcXRxUWIyc1dRaHloMkFFci9FN0JMOTJtcGhZaFU3WnRQakNUSnorU1ZMenZldEsKUEhTZTlwS2ZzUW1ZbEVJYnhLY3RzWUJ4bmVvVlVMd0ZUdzNERkkwWUpTcUZoMkU3dXNTQ1RrQUpVRGZVeFZjSgovNVZ1WUZSTVJIdy9QcEJCcVFveFhxbSt4dm1uejhxMDRUS0tidUdYQzhDK1lQOUVLeStlT0REaEt6bTBvYy9qCjVFVWhmbFVWQ2F5TUUrVVBJSzFObWhLOEVib25LYWFVcHdCT1JXekJXUWNZQnQwYlZmZ01TTENWbUNKc3lHWkcKbHdYSHBQRUNnWUVBd2JJck5yakpNN2RXTVZyNTBRMmlKNjFYMXk3WjRqaCtTUEVEeUR0cW9UbDR5TTYvUElkSwp4UG9CUHpRMEFhdE41ejBPbTZPSVpWTDc5dld5OGxzc3J5ZzRaZlFCL3ZRcnZXQ05EYUlPUGhDSG1HRklxZ1RDCnI3TWlNYzZDbFdaRXJycHBhODJ0V0RReGdjOUZvcElTTm1kVit5ang0K0V6WmJIQ1RMT1VIZDBDZ1lFQTQzTWIKK3lnWk9hVFc3OEFienJxNW5HUjZUbnBNdzhab2RGQ09BYnhXaDMzWXNLMElGNk9SS2VYTWJQZE1xRzRjQTBiVAppQTVrK3ltZ294QTZMQnArdWxUUW5mM1M2OVVhcXcraWh0bTFlSldhajUremlMbDNYclo2dFdxMnhYYVVTUVRZCkhGeTJ3ZWVjNjQ1dE53V1R3bVZVTFVZWHNWdWZKTWJCQnhsb2hVOENnWUVBc1lGdzNyNHJET3pYM1hVcytTc1EKVG1JcDNMWS8wSFBMTDFkSUN3aUFhRzI5eGZES0NsTkY3d3ZaZHEyRmQzNGdiMmhoNmJuTTltWTlLQTMwUnV2TgpJRnV3aTZZNDZnZWp5ZklnY2J6d1ptcEppUmltT2NFUkZXa0pUakdkTkFLN3NKQitxZCtjR3ZnQjRwOHJocGRzCmYxVGwwN3lyS0JXcVAyak8wZkhFTERVQ2dZQlc5eEpCeTZrcGN5K0RaKzY1OG9jNWx1bDB6Q3BCeU1EemlFRmoKeElGSk9RTDdPbzJYakVEYXhqU05qVmpRSlptc1h3NU9QVUs3RGNXUDA0cUtobTdpQzcvZ1NNYTJ5VHB6SVgxQgpGa2plbkVVR21VZHFCWS93dE5EaVFMVTFkd3RuaCtTaG80bDFSbnVuVFVQUS85N3BPeGtlWG1oOHRjMTVvRXo1CnkrczgzUUtCZ0NZL3lub1R3WmVkYWNuY0VSWVgwMk52TVdvenVjQ2MzYzNDOEhyd1NTUkJJWEluVW5TWVRxdisKczFjSTRVVDM1VjJXdFZBd2dGRmIzY3Q0R0pETUY2NmM3dFo3SWFtSjZ3aEhCbkJuek8xWkhEYzNpajNxRWpJSQpCaGR5ZGx1M2c5UWxHRGlIQWNSSDRxOUgyc2UwOTBSYkVTN1ZJcmFEZENHRUdqSHltZE5HCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRT0JnNmVQRWlUai8rSXJtaE1DNC9pakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1ESTFNVGMxTkRBM1doY05Nak14TURJMU1UYzFOREEzV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzR0JTR3dnVjhKbHdlTjI2NmlaV3JBVzgrcWpJL2szaU5qdldEbU5YcgpZYkQ5UGVEeWYwTzV0aTJBajhJSkdmdi9IMWRwL1VQV0F6VnhFY1pwL0RFbXo1R1BDMk8rVGxqdEhHUkpXa0JoCkxENXIvTnVua0MySzVBaU45QitvaExnRnVTdEJEdGt2YlFhWmEySjU5MTZkMXhnVXBoOVlVanB6blBNLzQ2YVYKVW9EVGxGL1BmNTczUjAvWjJwdjRINXkxU2RndktWUjlqN2lPdkV4M1NOV1RKYjVibXUrUmlQTmF4MEhXejgvNAoyUm95MmhXVmR1MnBkUHlsTm91ODM5YWRHQnMxS0RmcS9EeDFkMFVXVGlDdlRxTm5WWDRxMW9Ha0tzd1hPSjZJCmxXdWFHT2NOOU5VWGw3VkdEVVBkRHlvZlBrakFGM2JXWXVqOXFCa1ZBUWd6QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDTlhIUGZnbEhwYTRKdXZLSmRGZDdsc1NkdWsKdGNyVitWeFI0Njh0dy9ESW54d1Q3SGgzMi9pNEk5UVBwY3BpaXFIeEdhZmkvTEpwMzN1WFc1UWJrcFF0OU0wVgo2bWVaSXhzWEExby9WenVraTE1TUUrdVZtc3AzY1pXSUsvY0Uwb1ZOeWlFeW9vMi9HdXJqbERmZkEvMlRpQUROCnNtN2tBUitFZG52QnhNeFlXTXk2d2ZlUm96czNzakl0cHppT3Zvc0QwYUJBWVFPbGpCa2g1RWNLYlRQM2ozVmQKOHFreVJJRlQrNEE0aE83L3FSZGErbkREWUY1UmYxbStTYUE0MzMyeWh6SytoT3c3UlFONHFHMG02S3pUOUYybwp0dythdHZhclJRcER6TEh5OGNQeWl4ZUlHa25jUEw5Z0JieUU3Vmt3R2hzYm54RC9hRnZZSDhTVEVjQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRSFV3WmVqdXhZRXZWOVhjakJRZWpPVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRBeU5URTNOVFF3TjFvWERUSXpNVEF5TlRFM05UUXdOMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPRDM3OFVTdldmampmUWk0c3dZd002M1dFZUVtYStqVHhtTnV3RVVVSkwzQlNaOApVYWhlUUxmWmVtZlRNNStBOGxKLzRZTzVJVFEwcFpNVjZybU9jUXY5Vk1LUHVqbktKUmdsRkVmZ1dJdWpQTGNjCjUxOUxqUm1rdXo0eXUyZDlrOHB6TDVsRVNaWFJkR2lXQmRUSEJYNjF6cUtWbVUxTTFPMVFWcEJ0NCswQU5nQWsKbmNWbEYzZ1dNbmFtN0QzUGk1T3NCYm9LdGZKRTdvbkFudk9TN2RQZVFJc09ySzRZYnNBTjl2ditrZGl2ZmQ1KwpTQVpwZzZkYVk5bmxkQmRQdXpZTU5BLzJOTDZZRkorNmVSK3VCSlduSXkxWDhUTWtuQWp0UGxicmRYeXVKMjh1ClcvQnhsOEVud2lWOVRQMzU3QThjYWRhdG1nTW1qMzVkb2hjQ2x0a0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS3RSUUdpZlRxVzJTUUpVRUcvUXl6TWpnM0hFUzZrT1VmZWsKNnF3c3FwZGdJNlBONXVwcDFaZm13UkxPR3oxbXZHSUJuUWsrdFJORGRLWlBLalpKeVpmZWFzQ3hIY21ieDUvOApKTVBZUEt2c0YzL2dZRnNuTFU2QVVHYjR6eWxYaTNmay9mUXlJSVMxb0R1TmRneG1MbXlXTVBJb1Z6WW5qVk9KCnRMQU9DTXB2cVNQSFdZeXIzcFJxVXh5YnAvYk1JczJwVGtHYXJ3MzdMU0hDdEJFQ1NVU3BaZDRQVUIxVGJLS2IKU3IzcGYwNjlXUVk1d1RhWW9pZ09FYXpGT0Vzd1QrcSs1VjREM3cyelYreXFKcFhJeVdqVW9hdTFrTUR2TzVWYQppbldTK1BvV1BYbS9qaENXTGRaUXZ2U2hDRGFrSHdWZXBUTXByK0VlNWtQc2FhVjdYYjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNFBmdnhSSzlaK09OOUNMaXpCakF6cmRZUjRTWnI2TlBHWTI3QVJSUWt2Y0ZKbnhSCnFGNUF0OWw2WjlNem40RHlVbi9oZzdraE5EU2xreFhxdVk1eEMvMVV3bys2T2NvbEdDVVVSK0JZaTZNOHR4em4KWDB1TkdhUzdQaks3WjMyVHluTXZtVVJKbGRGMGFKWUYxTWNGZnJYT29wV1pUVXpVN1ZCV2tHM2o3UUEyQUNTZAp4V1VYZUJZeWRxYnNQYytMazZ3RnVncTE4a1R1aWNDZTg1THQwOTVBaXc2c3JoaHV3QTMyKy82UjJLOTkzbjVJCkJtbURwMXBqMmVWMEYwKzdOZ3cwRC9ZMHZwZ1VuN3A1SDY0RWxhY2pMVmZ4TXlTY0NPMCtWdXQxZks0bmJ5NWIKOEhHWHdTZkNKWDFNL2Zuc0R4eHAxcTJhQXlhUGZsMmlGd0tXMlFJREFRQUJBb0lCQUZtR1VRUTcwT1BteWphOQpLMFBORmUwdFNSUXMwSHYwb1NXcUlTRHMxS09uYVlWSE03ZXN5bFJmVnphNTlYRWovMHFWV1VqeUF5U2pUc0NaCm1DNy9ZRDFGTXRXNkhJR2l6K0FyNFVZNUlRTndrbGpNUjhiRWFnSXFhOWowbDE4M3VmaDJuaHAvOGtpTWNhYXQKRE9UL3prLytTWnlwcTdmM08wUzFFNzJsL1czeVNHZXdUSWhBZ01rT252WXN2bTBrR0Y2cXM1amFNRDErcXhHNwpKVzVxVmR2RytWb1hXRHNZU1V1UWR3RExXeU9FQ1RUY1pCdjIwWlp6SzhMa2ErQ1NIbFhnU2VnWUMvcGYvZ2N6Cm1uaHdXRGpjUzNaVHZxTkhIbW1xRzBvWCtHaW0vdE1TTTBPMityTjlya1RHYXVmTi92RldFZzdCMGhLaWdXdzAKUVpzb25nRUNnWUVBNXhwK2wrcmtYcmFWYlZaQWFucnk3a0NYR1ZEZlJ2RHkrdEgzQlFFQzdBZFdXVjloUWRFVgp0a3pQdTFUNk9rUnYvTnFLeXZNSCtSTzZWT3BSNFBZMUl3WEdiTmJBQTRmMVFmUkdRL1d6TTRSRG4vemFBcStxCjNJS2dBUmREYUxTZzdmbUFOZXdUcWpFb0QwY0Q4R3RPUjljVER3ZXBTUVVJYkZnNi9DMG9uVlVDZ1lFQStUUS8KYktRSXBJOFlGN0RHdkk5U3FuMTAzS3VnTVlWcURmRTFiWkJud2tua1c3SHo2WlU3TjZDSlI3dTVuNjJ5K01MZwpGUzRoVkd0ZlZIT29lYU1xVDR6eTJ1NGV3RVJXNGYyVDZwb0MwZXQrZThnM0RSSUdjL2t1dU05VWVOUk96Tlh4Cjd5V1A0eGdWV3VUZUNZSVhvUldYblFuZjN4VjVXTGVyZHZXdjgzVUNnWUFycHZLQWlZckhaUitHZm9NK1dham4KWGVYc2p6ME5ibGZIRHIvay94THBPRjJVRmhNTjFvdU9XcVhtVVovT1A3MFRlc2c2bTN0SERmWGxNamx6RDY1cgp4aHg3MUhpQ2NqemVUMkN5VjRlWTFJUGRoV284bGFmbGJQc0NHYjNPMmtlSGk5Z3Uxei9EcHZOVkoyblVFTURCCml4dDdmRXY2a2V2TVkwSUkvaEtzM1FLQmdHYUFBd1pnZ2QyTnJjOHd1czJiOWRpQ09hcjZQSzJodm5sMW1SQXoKc1RuTXdzeWthVHJPVXNrU2t1U2Faa016WXNYSEFmdzBPU2xMOEszLzFIQVRtTGVYdGR3dXpSOHYvTHgvWEhQRwpYUnFTemplRHBvRU54UEcyc0d6N2VqY292RENzWHhLS1ZLQ0hxMkR6ZWhCWEhmajN0S0MzQ3ducS96cHFjWEJBCnBkcHhBb0dBREhZanlQeEQya0ZSY0VPNm12Nm5qa2IzTllhNUU0bW5CTVdORkNmL3hsY2VYSHIxakpuYXRuNEwKVGljaWV2RGJiU0Y2Rkx6cnVteHQwbjIwTUpiQ1N3RHV6cFhzdjk0L2FWbE5OaGNIL3FQYzJZNStjT2hDVlRTOQpNWW1Cdms0Y2V2Y2pmR013OGN4VTBKcDkzOXpqYXV6SkRDUFg0Vm8ra1dQdG5sOTU0MlE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRSFV3WmVqdXhZRXZWOVhjakJRZWpPVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRBeU5URTNOVFF3TjFvWERUSXpNVEF5TlRFM05UUXdOMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPRDM3OFVTdldmampmUWk0c3dZd002M1dFZUVtYStqVHhtTnV3RVVVSkwzQlNaOApVYWhlUUxmWmVtZlRNNStBOGxKLzRZTzVJVFEwcFpNVjZybU9jUXY5Vk1LUHVqbktKUmdsRkVmZ1dJdWpQTGNjCjUxOUxqUm1rdXo0eXUyZDlrOHB6TDVsRVNaWFJkR2lXQmRUSEJYNjF6cUtWbVUxTTFPMVFWcEJ0NCswQU5nQWsKbmNWbEYzZ1dNbmFtN0QzUGk1T3NCYm9LdGZKRTdvbkFudk9TN2RQZVFJc09ySzRZYnNBTjl2ditrZGl2ZmQ1KwpTQVpwZzZkYVk5bmxkQmRQdXpZTU5BLzJOTDZZRkorNmVSK3VCSlduSXkxWDhUTWtuQWp0UGxicmRYeXVKMjh1ClcvQnhsOEVud2lWOVRQMzU3QThjYWRhdG1nTW1qMzVkb2hjQ2x0a0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS3RSUUdpZlRxVzJTUUpVRUcvUXl6TWpnM0hFUzZrT1VmZWsKNnF3c3FwZGdJNlBONXVwcDFaZm13UkxPR3oxbXZHSUJuUWsrdFJORGRLWlBLalpKeVpmZWFzQ3hIY21ieDUvOApKTVBZUEt2c0YzL2dZRnNuTFU2QVVHYjR6eWxYaTNmay9mUXlJSVMxb0R1TmRneG1MbXlXTVBJb1Z6WW5qVk9KCnRMQU9DTXB2cVNQSFdZeXIzcFJxVXh5YnAvYk1JczJwVGtHYXJ3MzdMU0hDdEJFQ1NVU3BaZDRQVUIxVGJLS2IKU3IzcGYwNjlXUVk1d1RhWW9pZ09FYXpGT0Vzd1QrcSs1VjREM3cyelYreXFKcFhJeVdqVW9hdTFrTUR2TzVWYQppbldTK1BvV1BYbS9qaENXTGRaUXZ2U2hDRGFrSHdWZXBUTXByK0VlNWtQc2FhVjdYYjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli git-5bc7eb96
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: true
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: git-5bc7eb96
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEwMjUxNzUzNTdaFw0yMzEwMjUxNzU0MTdaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEPJBbx6VV0cCp11IzURRLO2st0Yn6qTqb0QwxTVgd/wKOhoFkB7hOcfxCgI5l
            V0HYJn1EDjnpfIGbJf7kiwm82qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBQaJsdnJndv2R750sHtmsElwIQ9EzAKBggqhkjOPQQDAgNIADBFAiAXiR1SL69k
            jK+UdYQx/j5UKD41KkzzY/PZQU2n0McfVgIhAK9uU7Th0TgHAnlz7ZfV66iCEDTA
            AfLIKFj/cGxX1rge
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEwMjUxNzUzNTdaFw0yMzEwMjUxNzU0MTdaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEPJBbx6VV0cCp11IzURRLO2st0Yn6qTqb0QwxTVgd/wKOhoFkB7hOcfxCgI5l
      V0HYJn1EDjnpfIGbJf7kiwm82qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBQaJsdnJndv2R750sHtmsElwIQ9EzAKBggqhkjOPQQDAgNIADBFAiAXiR1SL69k
      jK+UdYQx/j5UKD41KkzzY/PZQU2n0McfVgIhAK9uU7Th0TgHAnlz7ZfV66iCEDTA
      AfLIKFj/cGxX1rge
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: git-5bc7eb96
    networkValidator:
      connectAddr: 1.1.1.1:20001
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV3TWpVeE56VXpOVGRhRncweU16RXdNalV4TnpVME1UZGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVQSkJieDZWVjBjQ3AxMUl6VVJSTE8yc3QwWW42cVRxYjBRd3hUVmdkL3dLT2hvRmtCN2hPY2Z4Q2dJNWwKVjBIWUpuMUVEam5wZklHYkpmN2tpd204MnFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUWFKc2RuSm5kdjJSNzUwc0h0bXNFbHdJUTlFekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUFYaVIxU0w2OWsKaksrVWRZUXgvajVVS0Q0MUtrenpZL1BaUVUybjBNY2ZWZ0loQUs5dVU3VGgwVGdIQW5sejdaZlY2NmlDRURUQQpBZkxJS0ZqL2NHeFgxcmdlCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtEM0g4emVSYlRMQ3JaWWRWby9EQ2pUcGlza1pjbHlTdWlLNTFWRmxpdWpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUEpCYng2VlYwY0NwMTFJelVSUkxPMnN0MFluNnFUcWIwUXd4VFZnZC93S09ob0ZrQjdoTwpjZnhDZ0k1bFYwSFlKbjFFRGpucGZJR2JKZjdraXdtODJnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEwMjUxNzUzNTdaFw0yMzEwMjUxNzU0MTdaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEPJBbx6VV0cCp11IzURRLO2st0Yn6qTqb0QwxTVgd/wKOhoFkB7hOcfxCgI5l
    V0HYJn1EDjnpfIGbJf7kiwm82qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBQaJsdnJndv2R750sHtmsElwIQ9EzAKBggqhkjOPQQDAgNIADBFAiAXiR1SL69k
    jK+UdYQx/j5UKD41KkzzY/PZQU2n0McfVgIhAK9uU7Th0TgHAnlz7ZfV66iCEDTA
    AfLIKFj/cGxX1rge
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli git-5bc7eb96
        linkerd.io/proxy-version: git-5bc7eb96
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 44c8286188a0d39b495c66fe6a66cc515266e130f203d48a5b6843b60ff2269e
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - name: linkerd-network-validator
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 2104
          capabilities:
            drop:
              - all
        command:
          - /usr/lib/linkerd/linkerd2-network-validator
        args:
          - --log-format
          - plain
          - --log-level
          - debug
          - --connect-addr
          - 1.1.1.1:20001
          - --listen-addr
          - 0.0.0.0:4140
          - --timeout
          - 10s
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli git-5bc7eb96
        linkerd.io/proxy-version: git-5bc7eb96
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 44c8286188a0d39b495c66fe6a66cc515266e130f203d48a5b6843b60ff2269e
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - name: linkerd-network-validator
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 2104
          capabilities:
            drop:
              - all
        command:
          - /usr/lib/linkerd/linkerd2-network-validator
        args:
          - --log-format
          - plain
          - --log-level
          - debug
          - --connect-addr
          - 1.1.1.1:20001
          - --listen-addr
          - 0.0.0.0:4140
          - --timeout
          - 10s
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  concurrencyPolicy: Replace
  schedule: "04 18 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli git-5bc7eb96
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:git-5bc7eb96
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli git-5bc7eb96
        linkerd.io/proxy-version: git-5bc7eb96
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 44c8286188a0d39b495c66fe6a66cc515266e130f203d48a5b6843b60ff2269e
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - name: linkerd-network-validator
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 2104
          capabilities:
            drop:
              - all
        command:
          - /usr/lib/linkerd/linkerd2-network-validator
        args:
          - --log-format
          - plain
          - --log-level
          - debug
          - --connect-addr
          - 1.1.1.1:20001
          - --listen-addr
          - 0.0.0.0:4140
          - --timeout
          - 10s
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: Y25pRW5hYmxlZDogdHJ1ZQppZGVudGl0eToKICBpc3N1ZXI6CiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMakFlRncweU1qRXdNalV4TnpVek5UZGFGdzB5TXpFd01qVXhOelUwTVRkYU1Cd3hHakFZCiAgICAgICAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogICAgICAgIFFnQUVQSkJieDZWVjBjQ3AxMUl6VVJSTE8yc3QwWW42cVRxYjBRd3hUVmdkL3dLT2hvRmtCN2hPY2Z4Q2dJNWwKICAgICAgICBWMEhZSm4xRURqbnBmSUdiSmY3a2l3bTgycU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgICAgICAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogICAgICAgIEJCUWFKc2RuSm5kdjJSNzUwc0h0bXNFbHdJUTlFekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUFYaVIxU0w2OWsKICAgICAgICBqSytVZFlReC9qNVVLRDQxS2t6elkvUFpRVTJuME1jZlZnSWhBSzl1VTdUaDBUZ0hBbmx6N1pmVjY2aUNFRFRBCiAgICAgICAgQWZMSUtGai9jR3hYMXJnZQogICAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgICAga2V5UEVNOiB8CiAgICAgICAgLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCiAgICAgICAgTUhjQ0FRRUVJS0QzSDh6ZVJiVExDclpZZFZvL0RDalRwaXNrWmNseVN1aUs1MVZGbGl1am9Bb0dDQ3FHU000OQogICAgICAgIEF3RUhvVVFEUWdBRVBKQmJ4NlZWMGNDcDExSXpVUlJMTzJzdDBZbjZxVHFiMFF3eFRWZ2Qvd0tPaG9Ga0I3aE8KICAgICAgICBjZnhDZ0k1bFYwSFlKbjFFRGpucGZJR2JKZjdraXdtODJnPT0KICAgICAgICAtLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCmlkZW50aXR5VHJ1c3RBbmNob3JzUEVNOiB8CiAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgTUlJQmlEQ0NBUzZnQXdJQkFnSUJBVEFLQmdncWhrak9QUVFEQWpBY01Sb3dHQVlEVlFRREV4RnBaR1Z1ZEdsMAogIGVTNXNhVzVyWlhKa0xqQWVGdzB5TWpFd01qVXhOelV6TlRkYUZ3MHlNekV3TWpVeE56VTBNVGRhTUJ3eEdqQVkKICBCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNECiAgUWdBRVBKQmJ4NlZWMGNDcDExSXpVUlJMTzJzdDBZbjZxVHFiMFF3eFRWZ2Qvd0tPaG9Ga0I3aE9jZnhDZ0k1bAogIFYwSFlKbjFFRGpucGZJR2JKZjdraXdtODJxTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnRUdNQjBHQTFVZEpRUVcKICBNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCiAgQkJRYUpzZG5KbmR2MlI3NTBzSHRtc0Vsd0lROUV6QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQVhpUjFTTDY5awogIGpLK1VkWVF4L2o1VUtENDFLa3p6WS9QWlFVMm4wTWNmVmdJaEFLOXVVN1RoMFRnSEFubHo3WmZWNjZpQ0VEVEEKICBBZkxJS0ZqL2NHeFgxcmdlCiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
