---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU5RbXpXczcrT1k5SlprNFc0K3N4RW93RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TURJMU1UazFPREl5V2hjTk1qTXhNREkxTVRrMU9ESXlXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1LaUNGUXArZkU2Q3dudkp1KzNGSUNqeUxaTDlUNHIreGxXVEVOWDJRSzNwMFdaaVZ4KwpkenhCNXlzL2ZIMCtkTEk1Z0VtaVpjeWlTalNDYlVjSDdKakZkV0JrOUM0MTVlWThMZnBFNld4NSt3bFhYSk1qCm1KVFdYTjVFOW80aXZ2R1NocGI5NFFBQllDcDNSbEt4QUlDN0U1a0tkelNSZ3lQRVpYeHI1RDIwZmJwTzdOWlcKWnNiZzJsKzBpbWhqdi9pS2lmeW02RytML212QTNRZTc3RHloS0o0M2JjbWZ6eG5qK1ZIU1FBOTVZUnlaTHZXTApGQitEWFRzRnBGS3BpNTBCc2lDUWV6NTFJUElVTEdGZTJ3a3NtbzR3Y2Ztam1NQjhHVE90dlYzMXRsVGRpdDk5ClFVVk41ZElwdWdCWXQ1clZ3STlRQ2ZEcmo4U1pWR0I3MVZjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBeVgwY3czRmd5dlFBa042UXFOOEhKSlZJaVJHSUdpaTlua05RRE05Y0gKNDdhTlZISGhrM09XcUxTSkkyaGRKZ1hwUHFrSVg4Z3BWY3hTQzVCWkdJeDVQcGNxNlR6Mkl5N0lTMlJSTi9jTAo5MkxxT0tVY2w0cHlRRmh1RDV5OXN2NXB3b1ZScUhGZWFQSkxZUytCU2lTaDdHOWhma3FacDViTHQrRlpQK3FGCm5COFdvdVBVNVZZN2grSHBza3Q3cFZrN0F1NzBvYmllZy9mNFRQZlh0QTB0YzdMK0dNWHNVV1greUc2TzJQY2YKS1RwWWVpb3BxSWU0VEFxNCs1Z3lObWYxd2E5M1pKeitLL1Q2d2ZxcUdVcTVmOXJMQXUwa1FlS3pmVmoyOE1LMQpJNHRNOUU1RHhZYllHVXJ6ZXp1am1ua0g2YlBDT1pOQmEycEVTeWVRR1JCNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3FJSVZDbjU4VG9MQ2U4bTc3Y1VnS1BJdGt2MVBpdjdHVlpNUTFmWkFyZW5SWm1KClhINTNQRUhuS3o5OGZUNTBzam1BU2FKbHpLSktOSUp0Undmc21NVjFZR1QwTGpYbDVqd3Qra1RwYkhuN0NWZGMKa3lPWWxOWmMza1QyamlLKzhaS0dsdjNoQUFGZ0tuZEdVckVBZ0xzVG1RcDNOSkdESThSbGZHdmtQYlI5dWs3cwoxbFpteHVEYVg3U0thR08vK0lxSi9LYm9iNHYrYThEZEI3dnNQS0VvbmpkdHlaL1BHZVA1VWRKQUQzbGhISmt1CjlZc1VINE5kT3dXa1VxbUxuUUd5SUpCN1BuVWc4aFFzWVY3YkNTeWFqakJ4K2FPWXdId1pNNjI5WGZXMlZOMksKMzMxQlJVM2wwaW02QUZpM210WEFqMUFKOE91UHhKbFVZSHZWVndJREFRQUJBb0lCQUhsaElYNlRld3RrWGxRQQpzRENZNVpGZ0V5RVU5OG1oRmdSMEhEVjNTSi80TnJvaUNWY0VpNG1wcytmMXZNWkN0L1lhQkJabno4S3hoME45Ci8zWm55N1p1bGtmYVRhbXY5VU1EVHMwZ1FzNWl1QnJZUDZTSGMzV0d4ZjNiMWtOSUNmcVBuWjMya0dZM2RXaW0KWDlYY0N1czlQL2lXWFVjTVpGTmUvTWQrWmFYUW5jOTlYWCtTQWJvanFKWkZ3bk16SXNsRDNXeEVJUTVLV2l3cQovdU1zN1psU0I2UHJlUFBYR1JrcDBCK2dsMXM1OTNGWXYzd2Q3SmRhNXV1WGdQSmVFRXJ2SXVBZDNOUnhWZS9wClRyRjB5RHViNytLYUgvaFg2NDFWUGxpeUpzb3V3R0F3SU5RaUVJQlBVblRIN1gxaUhSTkFrNFRXeU5RdEswZjMKRnl6alRuRUNnWUVBendYdEZLRFo1QjFyV3ZMUEpNZ0VpMzZkMzVWcStDVGI4ZWJ0TklXem9tbUd6bzJkek5uKworaFNEY2NhNW9yWlc5aVhBRnJlUW5YeEhudkljcE1ncE1JUTVqc3YzTzRBWngvM0l1SVAzR2toVWZwa2xxc2pRClRLYkI0T2JZQ1Qwd2RWNFpySDh1allsY3M4UUlxRVJYNG5WWlhtdTI2ZHJrN3NqeVFqOUIyYmtDZ1lFQThLMjEKMmloRjg5YVVZUXFCVC8rYlBlVHI4T1k4NXJaSnBnU1VEUW10b3ZYakdERFdsS1VYU2pZbFpqRnd6TlBXSjNqTgo0S3dWZElUTzFIWU9PMlAvdU9OYlZZTk8yYVVUYTRsdm53UXZ3N1VQcnVFYTN6by9IUXBZWS83V1VoZ2F4Ry8rCmZ2WUR2MjBML2lLdkZyTVJTL2lZeFg4QVNHWWN4OFhRaDEyc2I0OENnWUVBc2xjdmttcXk2ZkZ5RHlwR3lpL0kKd29hejUrMG05bGVDWmhTQ1daR29Xd3cvUm1iMi9vYjVRV1EwaStvZTl3M1BRa0xwQkdqa0d0YjZOL0hvUFFmMQplOGNjY21oQk5pKzNoZktaWEdMS2x3aWlTV0VTOHRvRm4xSzBpRk0wM2xpcEN5S2lTVmhTdVRrUTlBZTNVWVYyCmxDNTFhNEt0VXkzdnM4akY4YzNlbzNrQ2dZQm5UK25UNzUyM2dkREhweDdESEZHalMvVUx2NGs4NzlyRmJRbXcKWHdzdC9LYXk1NlAwd3Jrd25mV0gzSWt6STJ1MkhlRWlKRHhCZkJEY21xQ1pWZCtibWR6RzVFcWdtbit2bFp0WQpndytOenRjZ2xuaFdna1k5VFFlTVJRUHkwVzRNREpjT0lNU1RFMWdtaXZUbHBaQXpNRTlEMTdSalg1SFRIMUxZCkNKblFlUUtCZ1FET2I3RTZxWURsZmdWSGR0eElQNkRNTTY2YlRrdDBvOXdnTDFLd0RiUFA0UDEyMkpRZ0dNcnkKby9DemU5SGc1NDNmZlpwaWVlRm4rK0E4TVhvdXgwQWpvRkJmWTlHQ1RncmxZcXl0MjVPN0thekwrSHVGTjI3bgpPbjZlYUZMSHp3eXgvMVdLUlliemZYUnFIWG9NRHpmN1NSTGpha3FveWJreFVyNjFqdTNJNmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU5RbXpXczcrT1k5SlprNFc0K3N4RW93RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakl4TURJMU1UazFPREl5V2hjTk1qTXhNREkxTVRrMU9ESXlXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1LaUNGUXArZkU2Q3dudkp1KzNGSUNqeUxaTDlUNHIreGxXVEVOWDJRSzNwMFdaaVZ4KwpkenhCNXlzL2ZIMCtkTEk1Z0VtaVpjeWlTalNDYlVjSDdKakZkV0JrOUM0MTVlWThMZnBFNld4NSt3bFhYSk1qCm1KVFdYTjVFOW80aXZ2R1NocGI5NFFBQllDcDNSbEt4QUlDN0U1a0tkelNSZ3lQRVpYeHI1RDIwZmJwTzdOWlcKWnNiZzJsKzBpbWhqdi9pS2lmeW02RytML212QTNRZTc3RHloS0o0M2JjbWZ6eG5qK1ZIU1FBOTVZUnlaTHZXTApGQitEWFRzRnBGS3BpNTBCc2lDUWV6NTFJUElVTEdGZTJ3a3NtbzR3Y2Ztam1NQjhHVE90dlYzMXRsVGRpdDk5ClFVVk41ZElwdWdCWXQ1clZ3STlRQ2ZEcmo4U1pWR0I3MVZjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBeVgwY3czRmd5dlFBa042UXFOOEhKSlZJaVJHSUdpaTlua05RRE05Y0gKNDdhTlZISGhrM09XcUxTSkkyaGRKZ1hwUHFrSVg4Z3BWY3hTQzVCWkdJeDVQcGNxNlR6Mkl5N0lTMlJSTi9jTAo5MkxxT0tVY2w0cHlRRmh1RDV5OXN2NXB3b1ZScUhGZWFQSkxZUytCU2lTaDdHOWhma3FacDViTHQrRlpQK3FGCm5COFdvdVBVNVZZN2grSHBza3Q3cFZrN0F1NzBvYmllZy9mNFRQZlh0QTB0YzdMK0dNWHNVV1greUc2TzJQY2YKS1RwWWVpb3BxSWU0VEFxNCs1Z3lObWYxd2E5M1pKeitLL1Q2d2ZxcUdVcTVmOXJMQXUwa1FlS3pmVmoyOE1LMQpJNHRNOUU1RHhZYllHVXJ6ZXp1am1ua0g2YlBDT1pOQmEycEVTeWVRR1JCNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRVnI2V2JjMW85eWFLeDdaQndMT3JHVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1ESTFNVGsxT0RJeVdoY05Nak14TURJMU1UazFPREl5V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNma2MxOTZaRVJHMEdZdC9zdnRyQ3dzNEthdVVnenR4eG1zay9FVDhrRwpaWjM1QzdqQVZNY0Z6Tm5EaGIxUnJpVW1NZlpwZUpSNWdaRUcrRTZhU3MyWisyZjVnR2FwRm5qbzhzY05EOHgrCk5UeGo2d2ZSalNNZEx1bU94QTM3bG9NTXJSeWpXMFRJdW92YStPTzR3ZGFzMVNKakxSbEpIbmZvWlZMNDZ4bVIKL1NBVnRnTXl0dGlsbWc0WnNqblVvb3p1ek9sSmJlTit1eFpDZTZJZXMraWNjcjNKRGE4Vlk5WnoxWDNOTFNkdwpBTitSei9UTlltL0loZEhCdHJEdkZzSUoyai85NWd0UnBrVkhDNnBqVjBlUUE4YmF4MVVjemIvRXE3eDBHMHY2CjRydzYyL3dxcnl3SXRCTDVWODE2aXBrVEIrTzJGWkR2WjcrVWs1QzBUZ1F0QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFETWxwMXNjajhoTXdpVGdNOFY5ekJ6WFl4TmIKM2tPQ0VmSXVOM0NnbGJDUW5mTkljZWpsOFoxUElBWEhzS1hERTVyTERUSHh0N1hrMzFEVWcxMzFEcUJ2MVN4eQo0QmFFNHJ1VHFUZmlaVjFqTzhrSmo1YjdmN05EcWdXTHhGc2NSdFR0blBnTGFzYlNqdy9yWTg5aE1SZ2NMcHErCjkwbGpGOGhHRHRZcG1VejllblVvZTlFdHFqQzh0YjlWU2NCT1l2K09LMi9IL2Roa1ZSbWNPbnBiQ2dMUDFnRGUKaVhVTzhRcU5Jbit2N21tL3NvaDk3aEgyQThuekN1dm11Mmpsd2FmaGc2WHVBRU9TdVRnQ2FMN0xXZ1dnS0tKUwpPMGFLUktmZnlIa1laM05wWnptTWVwdWVnaU0waks1V2hnUXo0dEIzcEs2bkdTNUk3VFZ1ekNYdUtUZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbjVITmZlbVJFUnRCbUxmN0w3YXdzTE9DbXJsSU03Y2NackpQeEUvSkJtV2QrUXU0CndGVEhCY3padzRXOVVhNGxKakgyYVhpVWVZR1JCdmhPbWtyTm1mdG4rWUJtcVJaNDZQTEhEUS9NZmpVOFkrc0gKMFkwakhTN3Bqc1FOKzVhRERLMGNvMXRFeUxxTDJ2amp1TUhXck5VaVl5MFpTUjUzNkdWUytPc1prZjBnRmJZRApNcmJZcFpvT0diSTUxS0tNN3N6cFNXM2pmcnNXUW51aUhyUG9uSEs5eVEydkZXUFdjOVY5elMwbmNBRGZrYy8wCnpXSnZ5SVhSd2Jhdzd4YkNDZG8vL2VZTFVhWkZSd3VxWTFkSGtBUEcyc2RWSE0yL3hLdThkQnRMK3VLOE90djgKS3E4c0NMUVMrVmZOZW9xWkV3Zmp0aFdRNzJlL2xKT1F0RTRFTFFJREFRQUJBb0lCQUF1WmNiS2hjK1ltY1JKRQo3WUYrYWtHdUN1UnNhNDgyMUYyeXdKR29xeGhIOHIvVDFrNUUyMkxValUvbFBPbmZHdHczN1kybE1rWFM0VlA4CllOcGViYXV2MXRNUVBtWTBOLzNYQ0JrdStOS0QxQ3YvUGNaQjJEZWEzV2QvWVBUVThCblB5N0VrUlUvQ0g4Qi8KTHk2VENLUHZxbHhEUHY5TnM3RzFDOThFV0F1QW1aeWs3Z0hDbDJpamxscXF3TFduc29LZk43ZWxabXNheWR2TQpuNmY4eG9rUHljUDdsNU1QZVU5SFhKTWZZdFRjcjZrS0I0N2gvSXI2OTVPaWlQRjZwTHl1aHM5VVRGRW9ESnBqCnBSWUJ6RlZ2NE9ZbTM5cFNZV2xDeXBldHM4Y1BUSE4yb2NRVHh1Y2x3OFVLcGhsdU0yYm8yQXRwQzBBcTc4UzcKekM4RGRoRUNnWUVBeGphY2Nva1QzeU9NbmxQZEFnUHJnNFRtWkVkUlpYZGRFQytKZnhZcXJJZTVCMlY1LzBIcwo4S2YycGRPcGhFWXl4U20wMW9OV3NNYnBXYUJwb2FkUnc5WTRGVHJoZDVKSlk4MW5CQ0piYzFmM0tQV2NFU29nCllxRFoxakxPcTZVVGJVajlEZkVtZTVxSWlLd2o4SWpTUDYzZDhyN1pDbCs2aEVBTEU2WnF6TjhDZ1lFQXpoY1EKWlJsZ1Ixd1BvK0lsYlJtUFExTUYvYWRZSXQxaldIbFhaOGgxaWdIbWUrK2wreUVjWXI4bkVyeDR5UHI1RUcwcwpmeTQ4SThPRXNCZE0wRXp6VFZaK2cyODhzbWdUUmw1VTd0RU9uazhKZTJVUzNtM3ZsTlIrZ2l3NEJWR1BmdkcwCmhTK1FSRjdmZ2Z1YnVsVndURGxOUDU5RDU5M01uZ0lFZG5SdmhITUNnWUFudTNDMjROVno2RHRhelhMQzRhaEgKRDgvakVBeTM2eXBqZ1RQdG5yTGxMTHVoU08wZ2hzV0pKQklrQVg2OGZoblZQZHY3R0E2N2x0UFYzSHJ3SllzVgpWNDZjYXRZaFV0aVZRZXBCZ09XV0JHOE43ZFhmOXZMUThtOVlLWTBXQ1J3UXp3Mnl5c0V0QzdnTXRYenF6WEpmCncybDNMRnh6WU9jUmRZa0M0bHdNUHdLQmdIb0lzRDJkWENTRlFBR2tETk5nbWpPY2V1U3JiZ1lmSUErb3NuZ1MKL0g2L0IxTUdJanZsYkdDUW5qdDYvTzdOcGlQeThiRlJtR3o0L3A0aS9lb3VWcmZKNnRvN1NTNi9jQUp3STB6Uwo0QndmNHhaOVVFSUR5U1ZRK3FSc09MUDFpc241cUJKaGlzVGhoT244S2tlWkJna3N1VEJlUjZDSjl2cnRhT1VYCnAxMC9Bb0dCQUpyeXRQVUgrRFpJcFNPVDU5VGlQcVB4aC9FN3Qwc1FuVDhWbTdzSEtYMFBwTmpsaUw5cHZ1bTEKTStyQWJHQXl3b0tJNzFCYjlKK1pleStoYWhweFp1OThZZDJEVmx5alRubjh0M1B6SmVtaW8rcDhpZjRJd01RdgpmUVpjd2hiUUhoV3RCMGx4UDJ3aDQ1aTd5SzZUN3dka0tYVWc4dHovdExtb0hURW9aaG1yCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRVnI2V2JjMW85eWFLeDdaQndMT3JHVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpJeE1ESTFNVGsxT0RJeVdoY05Nak14TURJMU1UazFPREl5V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNma2MxOTZaRVJHMEdZdC9zdnRyQ3dzNEthdVVnenR4eG1zay9FVDhrRwpaWjM1QzdqQVZNY0Z6Tm5EaGIxUnJpVW1NZlpwZUpSNWdaRUcrRTZhU3MyWisyZjVnR2FwRm5qbzhzY05EOHgrCk5UeGo2d2ZSalNNZEx1bU94QTM3bG9NTXJSeWpXMFRJdW92YStPTzR3ZGFzMVNKakxSbEpIbmZvWlZMNDZ4bVIKL1NBVnRnTXl0dGlsbWc0WnNqblVvb3p1ek9sSmJlTit1eFpDZTZJZXMraWNjcjNKRGE4Vlk5WnoxWDNOTFNkdwpBTitSei9UTlltL0loZEhCdHJEdkZzSUoyai85NWd0UnBrVkhDNnBqVjBlUUE4YmF4MVVjemIvRXE3eDBHMHY2CjRydzYyL3dxcnl3SXRCTDVWODE2aXBrVEIrTzJGWkR2WjcrVWs1QzBUZ1F0QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFETWxwMXNjajhoTXdpVGdNOFY5ekJ6WFl4TmIKM2tPQ0VmSXVOM0NnbGJDUW5mTkljZWpsOFoxUElBWEhzS1hERTVyTERUSHh0N1hrMzFEVWcxMzFEcUJ2MVN4eQo0QmFFNHJ1VHFUZmlaVjFqTzhrSmo1YjdmN05EcWdXTHhGc2NSdFR0blBnTGFzYlNqdy9yWTg5aE1SZ2NMcHErCjkwbGpGOGhHRHRZcG1VejllblVvZTlFdHFqQzh0YjlWU2NCT1l2K09LMi9IL2Roa1ZSbWNPbnBiQ2dMUDFnRGUKaVhVTzhRcU5Jbit2N21tL3NvaDk3aEgyQThuekN1dm11Mmpsd2FmaGc2WHVBRU9TdVRnQ2FMN0xXZ1dnS0tKUwpPMGFLUktmZnlIa1laM05wWnptTWVwdWVnaU0waks1V2hnUXo0dEIzcEs2bkdTNUk3VFZ1ekNYdUtUZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRT1V4ZU9uOEhjb3FiL3BhRWRKVGM3VEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRBeU5URTVOVGd5TWxvWERUSXpNVEF5TlRFNU5UZ3lNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFLY1A5a25ONDNFWHJYcDFleWNEQTBtblpHcGVnQ3I2QVlnRWxKcXN2OEV4bmt2YgpCbXVsQjhhNXozc2h4dU5HT3VYYVlxdVJVblJ2NHQyaCtudGJ6d1AvNDZoSFRZVkxlalpvZ01zcUxNRk9qY0Y1CmgxTFUyNFQzOW9GbTE3d2NBTXlqTE9FaUJpNXNuUW1hR0d2NzZIVm1Nb3Rnd2JNbXpHUmJMOUU1Y2lUMndxZ0UKcWN2N0hUVkYzMHRMb1RmQng0RnV6elBlNGxoN3BzSGhSOS9IR2VuSkhNckRoUXM2cms0UUVRZjh6eVF6UjBubwpqQk1aNG5ZVjBjMnBQSnVxV1hiUkQrSEpwTFdGWGJzVC84bTBmVUN4NjN2YjVuWFVzeWk0clJ4ejQ4WHRMdWlaCjgyOXk4SGNKai83NE5JRVd6SnNzeld0UFFOY2h6emgyRlZzS3BYMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2xBN1ROblR1Uno2eGk2aitFcHFkMCtLRDhVZzArQ0FiVGMKVnlaQUpvVzk1Szh0Z0NLSkJ2UkVDL1RDVXdqYUlGdUt4L1hQM0NvTTdSTWRtTk85N0lvak13bmw1alBDNkgxRwpWZ3NBSlZJQWt3VjY0d1ZNc2dwMENYWEU4aTR4djMvRXZyVE1tUExKK0t3cDRDRzdIMVBOOUFJeUlpU05OaDlOCkp6N0lUcTVmdnpOdXIvU29uVmRjZ1E2ZVhrZVZvN1IyV2RHU3pEY0w5Q0JzVTRLem5yZTM3NlRjSUZGZ2hqTm0KNFNONHFOYlpnamI3TDdtYTdWbzFKeWIrZkdLUFFWeUpkVlJrU1hISlVuNWlDNGM3M0xpenRKdkJDby9DNEpGSApablJNbXZoQUFXdUxWdVREMklnOGF5RHQyV3NQYVdBQUg5bG12Zm83c2RFK0hML3pRcHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcHcvMlNjM2pjUmV0ZW5WN0p3TURTYWRrYWw2QUt2b0JpQVNVbXF5L3dUR2VTOXNHCmE2VUh4cm5QZXlIRzQwWTY1ZHBpcTVGU2RHL2kzYUg2ZTF2UEEvL2pxRWROaFV0Nk5taUF5eW9zd1U2TndYbUgKVXRUYmhQZjJnV2JYdkJ3QXpLTXM0U0lHTG15ZENab1lhL3ZvZFdZeWkyREJzeWJNWkZzdjBUbHlKUGJDcUFTcAp5L3NkTlVYZlMwdWhOOEhIZ1c3UE05N2lXSHVtd2VGSDM4Y1o2Y2tjeXNPRkN6cXVUaEFSQi96UEpETkhTZWlNCkV4bmlkaFhSemFrOG02cFpkdEVQNGNta3RZVmR1eFAveWJSOVFMSHJlOXZtZGRTektMaXRISFBqeGUwdTZKbnoKYjNMd2R3bVAvdmcwZ1JiTW15ek5hMDlBMXlIUE9IWVZXd3FsZlFJREFRQUJBb0lCQVFDZy90UDFPaEhtYWRBSApoSEhqSFpjc2dzRlZkSzZGUEJyL3JwSmJJUUZHTi8vNTBDQTIybnBNKzhIRVFyKzlSRy84RkdJa1BzNjhZUnE3ClJaN3pCSDNTdCtYM3hJY2pYcUp2RG5TWDFaUDkwaXJ2K2FMOG94N04zSHhWSmZ2ZlR3bENMRHBTMTR3bmJ3cEQKTjVvemJqY045Q2ZmZzZZSGRPdGlCekprcWJ5amV3OXNLazRYdmhXZEpaUVNJWU1hc3BsVUJ4Y0tyQTZXeEl0egplSHo4ZGcvS0FXSVJNcmRZWFQ3aERhRlgzSzRRbGpwYWJhdkpDZGhCVEtGQkc2TlRZVnVmdW5HNzlQUWZQdnZzCkx2clJoVm41eWdpNmR4enNkQlpDVkZKT0hDRUIyUWZLVWRqWDFUVXIxN0ZlNHMyeEFES1NUMjhiNHFUNnRxS2sKSEo4TTFmbk5Bb0dCQU15ZGwrVzJJWWMwRzlvRGxDbWJxT3lFdHRxOVRmeVF3UXVrWHluYWNCVDN3SDNiOENmNApZYzdwTVN6V056ckV2NHZOWnl4RVMwZ2dXNU1wU2I5bHpWSGtEK3ZldGRvOUhuNGNVSXgvV1MxcDFIRWZ1dnh2ClM5SU9xN2tvUlJMcnd6QUZZS1pDYW5qV3R1RUY0TW84SklmT2wwMXNQYjFjck8zYkozWjNzbmJiQW9HQkFORUUKSVl6WmY1QVF2WlJTU1JtOWtDYVJkdE1rSk5wM3g0Qy9kalRnelc0VS8xM2NpYUZVRGtOT0NqZHFxVG4xL1dHMwpvTVptZklaS1QwRFIzMnl0TWs0SGFTZm81ZEVvV05IWm9ackNwZ0tDRnFRT0dmZ1l1dlhKNEZCK3UrOGtybklhCmt3am00b2dXUGFBUS9FbVlnZWtWeDdRZUhEczJpaDFXNTk3ZmYyaUhBb0dBWmhEYWUxQjlxd2E0T2VqOUdFQTQKWkRyVFI0dVVnajdtdk5yeVNWdFgrMjJXVEhIUWV1K3dRbGthR1lhRnFFQUtXRDlPanN0R1RpVXQ2TnQ0bVF1NwovblJuNkwyQU11dTM4U3BJbDd6U2pBKzFVL1NDL25hNStIOHU4NzU5cmpHQ2ZNckI2azFJOVJ3TnYzT0NMUDhSCkxkbEVxZThyWVBFQXBlbGk1dnBRUUc4Q2dZRUF2TERhQ09tZysxSGhrN0RsUlZPWWV2ai9LSVdNcjUxS2diUlcKNWsyN3B4RlZxRXFjQlFSNUM5Rzc3Mk5lK25CVUdvOUhtVlNVUGpkL2JLa0s1blZFNEtSWURpdDJyV2ViSjNjdApLU1ZuOFFPM3BNc0dMcTlFdVBkU2hkaWptTFNvdDJHK00xOGNTbmFwazROQi9yNnJLTno4dUdJbVlsNU9PVVpuCmRSQ1hXS2tDZ1lBaFZCaVdjeTIwYVdYQ2JYQlM2SVZzZDg2S013VHNOTXY2ZlRNc1MyZ2t3UU1OK29TRHlRcFkKZHVRUndFVWM4ejdUb21idlRnc3NJd1NEc3BVVzFiOWpiS3ljNWptdXVtaENZZU41aDdiVFpGQ25wVjgyalBEcAprd2g5eThKOHhuTU5LR1JpUDNtZmNoNGF0TklBV09vZVp0R1Z4ZU41bGFnaElqKzNxaUQ5R2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRT1V4ZU9uOEhjb3FiL3BhRWRKVGM3VEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TVRBeU5URTVOVGd5TWxvWERUSXpNVEF5TlRFNU5UZ3lNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFLY1A5a25ONDNFWHJYcDFleWNEQTBtblpHcGVnQ3I2QVlnRWxKcXN2OEV4bmt2YgpCbXVsQjhhNXozc2h4dU5HT3VYYVlxdVJVblJ2NHQyaCtudGJ6d1AvNDZoSFRZVkxlalpvZ01zcUxNRk9qY0Y1CmgxTFUyNFQzOW9GbTE3d2NBTXlqTE9FaUJpNXNuUW1hR0d2NzZIVm1Nb3Rnd2JNbXpHUmJMOUU1Y2lUMndxZ0UKcWN2N0hUVkYzMHRMb1RmQng0RnV6elBlNGxoN3BzSGhSOS9IR2VuSkhNckRoUXM2cms0UUVRZjh6eVF6UjBubwpqQk1aNG5ZVjBjMnBQSnVxV1hiUkQrSEpwTFdGWGJzVC84bTBmVUN4NjN2YjVuWFVzeWk0clJ4ejQ4WHRMdWlaCjgyOXk4SGNKai83NE5JRVd6SnNzeld0UFFOY2h6emgyRlZzS3BYMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ2xBN1ROblR1Uno2eGk2aitFcHFkMCtLRDhVZzArQ0FiVGMKVnlaQUpvVzk1Szh0Z0NLSkJ2UkVDL1RDVXdqYUlGdUt4L1hQM0NvTTdSTWRtTk85N0lvak13bmw1alBDNkgxRwpWZ3NBSlZJQWt3VjY0d1ZNc2dwMENYWEU4aTR4djMvRXZyVE1tUExKK0t3cDRDRzdIMVBOOUFJeUlpU05OaDlOCkp6N0lUcTVmdnpOdXIvU29uVmRjZ1E2ZVhrZVZvN1IyV2RHU3pEY0w5Q0JzVTRLem5yZTM3NlRjSUZGZ2hqTm0KNFNONHFOYlpnamI3TDdtYTdWbzFKeWIrZkdLUFFWeUpkVlJrU1hISlVuNWlDNGM3M0xpenRKdkJDby9DNEpGSApablJNbXZoQUFXdUxWdVREMklnOGF5RHQyV3NQYVdBQUg5bG12Zm83c2RFK0hML3pRcHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli git-5bc7eb96
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: git-5bc7eb96
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        externalCA: false
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjEwMjUxOTU4MTJaFw0yMzEwMjUxOTU4MzJaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEDWxZu8nb3qUWXLCkmbcFNJNoGmQOR8IKE12ZxmTedpFhLtIxG5zs2HnbTXQO
            SShTXn1OLl9+UP7lnAbLsaoQTqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBQaXWBdL2HBYXovkXk3lHmLs81COTAKBggqhkjOPQQDAgNHADBEAiBfwQvqsvJH
            AIuL1JWj8/D93MagvqUHK9Lz9NWW45sUkAIgDkLR39rKzsykYvqOf1NVg49+De36
            yMGdbcvupZTvvuw=
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjEwMjUxOTU4MTJaFw0yMzEwMjUxOTU4MzJaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEDWxZu8nb3qUWXLCkmbcFNJNoGmQOR8IKE12ZxmTedpFhLtIxG5zs2HnbTXQO
      SShTXn1OLl9+UP7lnAbLsaoQTqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBQaXWBdL2HBYXovkXk3lHmLs81COTAKBggqhkjOPQQDAgNHADBEAiBfwQvqsvJH
      AIuL1JWj8/D93MagvqUHK9Lz9NWW45sUkAIgDkLR39rKzsykYvqOf1NVg49+De36
      yMGdbcvupZTvvuw=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: git-5bc7eb96
    networkValidator:
      connectAddr: 1.1.1.1:20001
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.0.0
      iptablesMode: legacy
      logFormat: ""
      logLevel: ""
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV3TWpVeE9UVTRNVEphRncweU16RXdNalV4T1RVNE16SmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVEV3hadThuYjNxVVdYTENrbWJjRk5KTm9HbVFPUjhJS0UxMlp4bVRlZHBGaEx0SXhHNXpzMkhuYlRYUU8KU1NoVFhuMU9MbDkrVVA3bG5BYkxzYW9RVHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUWFYV0JkTDJIQllYb3ZrWGszbEhtTHM4MUNPVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJmd1F2cXN2SkgKQUl1TDFKV2o4L0Q5M01hZ3ZxVUhLOUx6OU5XVzQ1c1VrQUlnRGtMUjM5ckt6c3lrWXZxT2YxTlZnNDkrRGUzNgp5TUdkYmN2dXBaVHZ2dXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUFEMnJvY3kyZUJubWUxWG8rQTFHSjd6YlZkdld4OVpSYUhEbzdlRWRlVnJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRFd4WnU4bmIzcVVXWExDa21iY0ZOSk5vR21RT1I4SUtFMTJaeG1UZWRwRmhMdEl4RzV6cwoySG5iVFhRT1NTaFRYbjFPTGw5K1VQN2xuQWJMc2FvUVRnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
data:
  ca-bundle.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMjEwMjUxOTU4MTJaFw0yMzEwMjUxOTU4MzJaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEDWxZu8nb3qUWXLCkmbcFNJNoGmQOR8IKE12ZxmTedpFhLtIxG5zs2HnbTXQO
    SShTXn1OLl9+UP7lnAbLsaoQTqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBQaXWBdL2HBYXovkXk3lHmLs81COTAKBggqhkjOPQQDAgNHADBEAiBfwQvqsvJH
    AIuL1JWj8/D93MagvqUHK9Lz9NWW45sUkAIgDkLR39rKzsykYvqOf1NVg49+De36
    yMGdbcvupZTvvuw=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli git-5bc7eb96
        linkerd.io/proxy-version: git-5bc7eb96
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: d3d89881ce0621a04e1637527099011fcf39c0c932655cf2d1076ab278dd15f9
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli git-5bc7eb96
        linkerd.io/proxy-version: git-5bc7eb96
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: d3d89881ce0621a04e1637527099011fcf39c0c932655cf2d1076ab278dd15f9
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin
          initialDelaySeconds: 10
        resources:
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
spec:
  concurrencyPolicy: Replace
  schedule: "08 20 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli git-5bc7eb96
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:git-5bc7eb96
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
              allowPrivilegeEscalation: false
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: git-5bc7eb96
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli git-5bc7eb96
        linkerd.io/proxy-version: git-5bc7eb96
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: d3d89881ce0621a04e1637527099011fcf39c0c932655cf2d1076ab278dd15f9
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:git-5bc7eb96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          runAsUser: 2103
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        image: cr.l5d.io/linkerd/proxy-init:v2.0.0
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli git-5bc7eb96
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaHpDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNakV3TWpVeE9UVTRNVEphRncweU16RXdNalV4T1RVNE16SmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFRFd4WnU4bmIzcVVXWExDa21iY0ZOSk5vR21RT1I4SUtFMTJaeG1UZWRwRmhMdEl4RzV6czJIbmJUWFFPCiAgICAgICAgU1NoVFhuMU9MbDkrVVA3bG5BYkxzYW9RVHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlFhWFdCZEwySEJZWG92a1hrM2xIbUxzODFDT1RBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlCZndRdnFzdkpICiAgICAgICAgQUl1TDFKV2o4L0Q5M01hZ3ZxVUhLOUx6OU5XVzQ1c1VrQUlnRGtMUjM5ckt6c3lrWXZxT2YxTlZnNDkrRGUzNgogICAgICAgIHlNR2RiY3Z1cFpUdnZ1dz0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUFEMnJvY3kyZUJubWUxWG8rQTFHSjd6YlZkdld4OVpSYUhEbzdlRWRlVnJvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVEV3hadThuYjNxVVdYTENrbWJjRk5KTm9HbVFPUjhJS0UxMlp4bVRlZHBGaEx0SXhHNXpzCiAgICAgICAgMkhuYlRYUU9TU2hUWG4xT0xsOStVUDdsbkFiTHNhb1FUZz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1qRXdNalV4T1RVNE1USmFGdzB5TXpFd01qVXhPVFU0TXpKYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVEV3hadThuYjNxVVdYTENrbWJjRk5KTm9HbVFPUjhJS0UxMlp4bVRlZHBGaEx0SXhHNXpzMkhuYlRYUU8KICBTU2hUWG4xT0xsOStVUDdsbkFiTHNhb1FUcU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUWFYV0JkTDJIQllYb3ZrWGszbEhtTHM4MUNPVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJmd1F2cXN2SkgKICBBSXVMMUpXajgvRDkzTWFndnFVSEs5THo5TldXNDVzVWtBSWdEa0xSMzlyS3pzeWtZdnFPZjFOVmc0OStEZTM2CiAgeU1HZGJjdnVwWlR2dnV3PQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
