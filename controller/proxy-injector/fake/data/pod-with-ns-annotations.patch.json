[
  {
    "op": "add",
    "path": "/metadata/annotations/config.alpha.linkerd.io~1proxy-wait-before-exit-seconds",
    "value": "300"
  },
  {
    "op": "add",
    "path": "/metadata/annotations/config.linkerd.io~1skip-outbound-ports",
    "value": "34567"
  },
  {
    "op": "add",
    "path": "/metadata/annotations/linkerd.io~1identity-mode",
    "value": "disabled"
  },
  {
    "op": "add",
    "path": "/metadata/annotations/linkerd.io~1proxy-version",
    "value": "dev-undefined"
  },
  {
    "op": "add",
    "path": "/metadata/labels/linkerd.io~1control-plane-ns",
    "value": "linkerd"
  },
  {
    "op": "add",
    "path": "/metadata/labels/linkerd.io~1proxy-deployment",
    "value": "owner-deployment"
  },
  {
    "op": "add",
    "path": "/metadata/labels/linkerd.io~1workload-ns",
    "value": "kube-public"
  },
  {
    "op": "add",
    "path": "/spec/volumes",
    "value": []
  },
  {
    "op": "add",
    "path": "/spec/initContainers",
    "value": []
  },
  {
    "op": "add",
    "path": "/spec/volumes/-",
    "value": {
      "emptyDir": {},
      "name": "linkerd-proxy-init-xtables-lock"
    }
  },
  {
    "op": "add",
    "path": "/spec/initContainers/-",
    "value": {
      "args": [
        "--incoming-proxy-port",
        "4143",
        "--outgoing-proxy-port",
        "4140",
        "--proxy-uid",
        "2102",
        "--inbound-ports-to-ignore",
        "4190,4191,4567,4568",
        "--outbound-ports-to-ignore",
        "34567"
      ],
      "image": "cr.l5d.io/linkerd/proxy-init:v1.3.13",
      "imagePullPolicy": "IfNotPresent",
      "name": "linkerd-init",
      "resources": {
        "limits": {
          "cpu": "100m",
          "memory": "50Mi"
        },
        "requests": {
          "cpu": "10m",
          "memory": "10Mi"
        }
      },
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "capabilities": {
          "add": [
            "NET_ADMIN",
            "NET_RAW"
          ]
        },
        "privileged": false,
        "readOnlyRootFilesystem": true,
        "runAsNonRoot": false,
        "runAsUser": 0
      },
      "terminationMessagePolicy": "FallbackToLogsOnError",
      "volumeMounts": [
        {
          "mountPath": "/run",
          "name": "linkerd-proxy-init-xtables-lock"
        }
      ]
    }
  },
  {
    "op": "add",
    "path": "/spec/containers/0",
    "value": {
      "env": [
        {
          "name": "LINKERD2_PROXY_LOG",
          "value": "warn,linkerd=info"
        },
        {
          "name": "LINKERD2_PROXY_LOG_FORMAT",
          "value": "plain"
        },
        {
          "name": "LINKERD2_PROXY_DESTINATION_SVC_ADDR",
          "value": "linkerd-dst-headless.linkerd.svc.cluster.local.:8086"
        },
        {
          "name": "LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS",
          "value": "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        },
        {
          "name": "LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT",
          "value": "100ms"
        },
        {
          "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT",
          "value": "1000ms"
        },
        {
          "name": "LINKERD2_PROXY_CONTROL_LISTEN_ADDR",
          "value": "0.0.0.0:4190"
        },
        {
          "name": "LINKERD2_PROXY_ADMIN_LISTEN_ADDR",
          "value": "0.0.0.0:4191"
        },
        {
          "name": "LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR",
          "value": "127.0.0.1:4140"
        },
        {
          "name": "LINKERD2_PROXY_INBOUND_LISTEN_ADDR",
          "value": "0.0.0.0:4143"
        },
        {
          "name": "LINKERD2_PROXY_INBOUND_IPS",
          "valueFrom": {
            "fieldRef": {
              "fieldPath": "status.podIPs"
            }
          }
        },
        {
          "name": "LINKERD2_PROXY_INBOUND_PORTS",
          "value": "80"
        },
        {
          "name": "LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES",
          "value": "svc.cluster.local."
        },
        {
          "name": "LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE",
          "value": "10000ms"
        },
        {
          "name": "LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE",
          "value": "10000ms"
        },
        {
          "name": "LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION",
          "value": "25,443,587,3306,4444,5432,6379,9300,11211"
        },
        {
          "name": "_pod_ns",
          "valueFrom": {
            "fieldRef": {
              "fieldPath": "metadata.namespace"
            }
          }
        },
        {
          "name": "_pod_nodeName",
          "valueFrom": {
            "fieldRef": {
              "fieldPath": "spec.nodeName"
            }
          }
        },
        {
          "name": "LINKERD2_PROXY_DESTINATION_CONTEXT",
          "value": "{\"ns\":\"$(_pod_ns)\", \"nodeName\":\"$(_pod_nodeName)\"}\n"
        },
        {
          "name": "LINKERD2_PROXY_IDENTITY_DISABLED",
          "value": "disabled"
        }
      ],
      "image": "cr.l5d.io/linkerd/proxy:dev-undefined",
      "imagePullPolicy": "IfNotPresent",
      "lifecycle": {
        "postStart": {
          "exec": {
            "command": [
              "/usr/lib/linkerd/linkerd-await"
            ]
          }
        },
        "preStop": {
          "exec": {
            "command": [
              "/bin/bash",
              "-c",
              "sleep 300"
            ]
          }
        }
      },
      "livenessProbe": {
        "httpGet": {
          "path": "/live",
          "port": 4191
        },
        "initialDelaySeconds": 10
      },
      "name": "linkerd-proxy",
      "ports": [
        {
          "containerPort": 4143,
          "name": "linkerd-proxy"
        },
        {
          "containerPort": 4191,
          "name": "linkerd-admin"
        }
      ],
      "readinessProbe": {
        "httpGet": {
          "path": "/ready",
          "port": 4191
        },
        "initialDelaySeconds": 2
      },
      "resources": null,
      "securityContext": {
        "allowPrivilegeEscalation": false,
        "readOnlyRootFilesystem": true,
        "runAsUser": 2102
      },
      "terminationMessagePolicy": "FallbackToLogsOnError"
    }
  }
]
