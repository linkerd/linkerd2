/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/linkerd/linkerd2/controller/gen/apis/policy/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// AuthorizationPolicyLister helps list AuthorizationPolicies.
// All objects returned here must be treated as read-only.
type AuthorizationPolicyLister interface {
	// List lists all AuthorizationPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AuthorizationPolicy, err error)
	// AuthorizationPolicies returns an object that can list and get AuthorizationPolicies.
	AuthorizationPolicies(namespace string) AuthorizationPolicyNamespaceLister
	AuthorizationPolicyListerExpansion
}

// authorizationPolicyLister implements the AuthorizationPolicyLister interface.
type authorizationPolicyLister struct {
	listers.ResourceIndexer[*v1alpha1.AuthorizationPolicy]
}

// NewAuthorizationPolicyLister returns a new AuthorizationPolicyLister.
func NewAuthorizationPolicyLister(indexer cache.Indexer) AuthorizationPolicyLister {
	return &authorizationPolicyLister{listers.New[*v1alpha1.AuthorizationPolicy](indexer, v1alpha1.Resource("authorizationpolicy"))}
}

// AuthorizationPolicies returns an object that can list and get AuthorizationPolicies.
func (s *authorizationPolicyLister) AuthorizationPolicies(namespace string) AuthorizationPolicyNamespaceLister {
	return authorizationPolicyNamespaceLister{listers.NewNamespaced[*v1alpha1.AuthorizationPolicy](s.ResourceIndexer, namespace)}
}

// AuthorizationPolicyNamespaceLister helps list and get AuthorizationPolicies.
// All objects returned here must be treated as read-only.
type AuthorizationPolicyNamespaceLister interface {
	// List lists all AuthorizationPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AuthorizationPolicy, err error)
	// Get retrieves the AuthorizationPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AuthorizationPolicy, error)
	AuthorizationPolicyNamespaceListerExpansion
}

// authorizationPolicyNamespaceLister implements the AuthorizationPolicyNamespaceLister
// interface.
type authorizationPolicyNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.AuthorizationPolicy]
}
