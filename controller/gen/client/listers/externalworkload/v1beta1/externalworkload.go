/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/linkerd/linkerd2/controller/gen/apis/externalworkload/v1beta1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ExternalWorkloadLister helps list ExternalWorkloads.
// All objects returned here must be treated as read-only.
type ExternalWorkloadLister interface {
	// List lists all ExternalWorkloads in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ExternalWorkload, err error)
	// ExternalWorkloads returns an object that can list and get ExternalWorkloads.
	ExternalWorkloads(namespace string) ExternalWorkloadNamespaceLister
	ExternalWorkloadListerExpansion
}

// externalWorkloadLister implements the ExternalWorkloadLister interface.
type externalWorkloadLister struct {
	listers.ResourceIndexer[*v1beta1.ExternalWorkload]
}

// NewExternalWorkloadLister returns a new ExternalWorkloadLister.
func NewExternalWorkloadLister(indexer cache.Indexer) ExternalWorkloadLister {
	return &externalWorkloadLister{listers.New[*v1beta1.ExternalWorkload](indexer, v1beta1.Resource("externalworkload"))}
}

// ExternalWorkloads returns an object that can list and get ExternalWorkloads.
func (s *externalWorkloadLister) ExternalWorkloads(namespace string) ExternalWorkloadNamespaceLister {
	return externalWorkloadNamespaceLister{listers.NewNamespaced[*v1beta1.ExternalWorkload](s.ResourceIndexer, namespace)}
}

// ExternalWorkloadNamespaceLister helps list and get ExternalWorkloads.
// All objects returned here must be treated as read-only.
type ExternalWorkloadNamespaceLister interface {
	// List lists all ExternalWorkloads in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ExternalWorkload, err error)
	// Get retrieves the ExternalWorkload from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.ExternalWorkload, error)
	ExternalWorkloadNamespaceListerExpansion
}

// externalWorkloadNamespaceLister implements the ExternalWorkloadNamespaceLister
// interface.
type externalWorkloadNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.ExternalWorkload]
}
