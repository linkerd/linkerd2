{{if .Values.gateway.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{ include "partials.annotations.created-by" . }}
  labels:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{.Values.linkerdVersion}}
    linkerd.io/control-plane-component: gateway
    app: {{.Values.gateway.name}}
    linkerd.io/extension: multicluster
  name: {{.Values.gateway.name}}
  namespace: {{.Values.namespace}}
spec:
  replicas: {{.Values.gateway.replicas}}
  selector:
    matchLabels:
      app: {{.Values.gateway.name}}
  {{- if .Values.enablePodAntiAffinity }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
  template:
    metadata:
      annotations:
        {{ include "partials.annotations.created-by" . }}
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-require-identity-inbound-ports: "{{.Values.gateway.port}}"
        config.linkerd.io/enable-gateway: "true"
      labels:
        app: {{.Values.gateway.name}}
    spec:
      {{- if .Values.enablePodAntiAffinity -}}
      {{- $local := dict "label" "app" "component" .Values.gateway.name -}}
      {{- include "linkerd.pod-affinity" $local | nindent 6 -}}
      {{- end }}
      containers:
        - name: pause
          image: gcr.io/google_containers/pause:3.2
      serviceAccountName: {{.Values.gateway.name}}
{{- if .Values.enablePodAntiAffinity }}
---
kind: PodDisruptionBudget
apiVersion: policy/v1
metadata:
  name: {{.Values.gateway.name}}
  namespace: {{.Values.namespace}}
  labels:
    app: {{.Values.gateway.name}}
  annotations:
    {{ include "partials.annotations.created-by" . }}
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: {{.Values.gateway.name}}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.gateway.name}}
  namespace: {{.Values.namespace}}
  labels:
    linkerd.io/extension: multicluster
  annotations:
    mirror.linkerd.io/gateway-identity: {{.Values.gateway.name}}.{{.Values.namespace}}.serviceaccount.identity.{{.Values.linkerdNamespace}}.{{.Values.identityTrustDomain}}
    mirror.linkerd.io/probe-period: "{{.Values.gateway.probe.seconds}}"
    mirror.linkerd.io/probe-path: {{.Values.gateway.probe.path}}
    mirror.linkerd.io/multicluster-gateway: "true"
    linkerd.io/control-plane-component: gateway
    {{ include "partials.annotations.created-by" . }}
    {{- with .Values.gateway.serviceAnnotations }}{{ toYaml . | trim | nindent 4 }}{{- end }}
spec:
  ports:
  {{- $setNodePorts := (or (eq .Values.gateway.serviceType "NodePort") (eq .Values.gateway.serviceType "LoadBalancer")) }}
  - name: mc-gateway
    port: {{.Values.gateway.port}}
    protocol: TCP
  {{- if (and $setNodePorts .Values.gateway.nodePort) }}
    nodePort: {{ .Values.gateway.nodePort }}
  {{- end }}
  - name: mc-probe
    port: {{.Values.gateway.probe.port}}
    protocol: TCP
  {{- if (and $setNodePorts .Values.gateway.probe.nodePort) }}
    nodePort: {{ .Values.gateway.probe.nodePort }}
  {{- end }}
  selector:
    app: {{.Values.gateway.name}}
  type: {{ .Values.gateway.serviceType }}
{{- if .Values.gateway.loadBalancerIP }}
  loadBalancerIP: {{ .Values.gateway.loadBalancerIP }}
{{- end }}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: {{.Values.gateway.name}}
  namespace: {{.Values.namespace}}
  labels:
    linkerd.io/extension: multicluster
{{end -}}
