{{- if .Values.createNamespaceMetadataJob}}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    {{ include "partials.annotations.created-by" . }}
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    linkerd.io/extension: multicluster
    app.kubernetes.io/name: namespace-metadata
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{.Values.linkerdVersion}}
    {{- with .Values.commonLabels }}{{ toYaml . | trim | nindent 4 }}{{- end }}
  name: namespace-metadata
  namespace: {{.Release.Namespace}}
spec:
  template:
    metadata:
      annotations:
        {{ include "partials.annotations.created-by" . }}
        linkerd.io/inject: disabled
      labels:
        linkerd.io/extension: multicluster
        app.kubernetes.io/name: namespace-metadata
        app.kubernetes.io/part-of: Linkerd
        app.kubernetes.io/version: {{.Values.linkerdVersion}}
        {{- with .Values.podLabels }}{{ toYaml . | trim | nindent 8 }}{{- end }}
    spec:
      {{- with .Values.namespaceMetadata.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.namespaceMetadata.tolerations }}
      tolerations: {{ toYaml . | nindent 6 }}
      {{- end }}
      restartPolicy: Never
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: namespace-metadata
      automountServiceAccountToken: false
      containers:
      - name: namespace-metadata
        image: {{.Values.namespaceMetadata.image.registry}}/{{.Values.namespaceMetadata.image.name}}:{{.Values.namespaceMetadata.image.tag}}
        imagePullPolicy: {{.Values.namespaceMetadata.image.pullPolicy | default .Values.imagePullPolicy}}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: {{.Values.gateway.UID}}
          runAsGroup: {{.Values.gateway.GID}}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
        args:
        - --extension
        - multicluster
        - --namespace
        - {{.Release.Namespace}}
        - --linkerd-namespace
        - {{.Values.linkerdNamespace}}
      volumes:
      - {{- include "partials.volumes.manual-mount-service-account-token" . | indent 8 | trimPrefix (repeat 7 " ") }}
{{- end }}
