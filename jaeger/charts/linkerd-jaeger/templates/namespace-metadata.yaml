---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    {{ include "partials.annotations.created-by" . }}
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: namespace-metadata
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{default .Values.linkerdVersion .Values.cliVersion}}
    {{- with .Values.commonLabels }}{{ toYaml . | trim | nindent 4 }}{{- end }}
  name: namespace-metadata
spec:
  template:
    metadata:
      annotations:
        {{ include "partials.annotations.created-by" . }}
        linkerd.io/inject: disabled
      labels:
        app.kubernetes.io/name: namespace-metadata
        app.kubernetes.io/part-of: Linkerd
        app.kubernetes.io/version: {{default .Values.linkerdVersion .Values.cliVersion}}
        {{- with .Values.podLabels }}{{ toYaml . | trim | nindent 8 }}{{- end }}
    spec:
      restartPolicy: Never
      serviceAccountName: namespace-metadata
      containers:
      - name: namespace-metadata
        image: {{.Values.namespaceMetadata.image.registry}}/{{.Values.namespaceMetadata.image.name}}:{{.Values.namespaceMetadata.image.tag}}
        imagePullPolicy: {{.Values.namespaceMetadata.image.pullPolicy | default .Values.imagePullPolicy}}
        command: ["/bin/sh"]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: {{.Values.defaultUID}}
          seccompProfile:
            type: RuntimeDefault
        args:
        - -c
        - |
          ops=''
          token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          ns=$(curl -kfv -H "Authorization: Bearer $token" \
            "https://kubernetes.default.svc/api/v1/namespaces/{{.Release.Namespace}}")

          if ! echo "$ns" | grep -q 'labels'; then
            ops="$ops{\"op\": \"add\",\"path\": \"/metadata/labels\",\"value\": {}},"
          fi

          ops="$ops{\"op\": \"add\", \"path\": \"/metadata/labels/linkerd.io~1extension\", \"value\": \"jaeger\"},"

          # grab the latest occurence of cniEnabled in linkerd-config, to
          # discard value in the last-applied-configuration annotation
          cniEnabled=$(curl -kfv -H "Authorization: Bearer $token" \
            "https://kubernetes.default.svc/api/v1/namespaces/{{.Values.linkerdNamespace}}/configmaps/linkerd-config" | \
            sed -r -n 's/.*cniEnabled: (\w+).*/\1/gp' | tail -1)

          level="privileged"
          if [ "$cniEnabled" = "true" ]; then
            level="restricted"
          fi
          ops="$ops{\"op\": \"add\", \"path\": \"/metadata/labels/pod-security.kubernetes.io~1enforce\", \"value\": \"$level\"}"

          curl -kfv -XPATCH -H "Content-Type: application/json-patch+json" -H "Authorization: Bearer $token" \
            -d "[$ops]" \
            "https://kubernetes.default.svc/api/v1/namespaces/{{.Release.Namespace}}?fieldManager=kubectl-label"
